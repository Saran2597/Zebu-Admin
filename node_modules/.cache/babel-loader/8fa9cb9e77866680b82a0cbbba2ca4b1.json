{"remainingRequest":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/node_modules/babel-loader/lib/index.js!/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/src/mixins/commonFunctions.js","dependencies":[{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/src/mixins/commonFunctions.js","mtime":1669217999704},{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/babel.config.js","mtime":1654503973575},{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["mapGetters","data","computed","webUserCount","mobileUserCount","apiUserCount","userLogCount","methods","getDateString","date","format","months","getPaddedComp","comp","parseInt","formattedDate","o","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","k","RegExp","test","replace","$1","getDayFromDate","dt","Date","getDay","downloadUnicodeCSV","objArray","arr","JSON","parse","str","Object","keys","map","value","join","csvContent","reduce","st","next","values","element","document","createElement","href","encodeURI","target","download","click","ruppesFormat","num","n1","n2","split","obj","console","log","Intl","DateTimeFormat"],"sources":["/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/src/mixins/commonFunctions.js"],"sourcesContent":["import { mapGetters } from \"vuex\";\nexport default {\n    data: () => ({}),\n    computed: {\n        ...mapGetters('logs', {\n            webUserCount: \"getWebUserCount\",\n            mobileUserCount: \"getMobileUserCount\",\n            apiUserCount: \"getApiUserCount\",\n            userLogCount: \"getUserLogCount\",\n        }),\n    },\n    methods: {\n        // downloadCsv (page, data) {\n        //     if (data.length != 0) {\n        //         var html = document.getElementById(\"tableData\").outerHTML;\n        //         this.exportToCsv(html, `${page}.csv`);\n        //     }\n        // },\n        //  createCSV(array){\n        //     var keys = Object.keys(array[0]); //Collects Table Headers\n\n        //     var result = ''; //CSV Contents\n        //     result += keys.join(','); //Comma Seperates Headers\n        //     result += '\\n'; //New Row\n\n        //     array.forEach(function(item){ //Goes Through Each Array Object\n        //       keys.forEach(function(key){//Goes Through Each Object value\n        //         result += item[key] + ','; //Comma Seperates Each Key Value in a Row\n        //       })\n        //       result += '\\n';//Creates New Row\n        //     })\n\n        //     return result;\n        //   },\n\n\n        // download_csv (csv, filename) {\n        //     var csvFile;\n        //     var downloadLink;\n        //     // CSV FILE\n        //     csvFile = new Blob([csv], { type: \"text/csv\" });\n        //     // Download link\n        //     downloadLink = document.createElement(\"a\");\n        //     // File name\n        //     downloadLink.download = filename;\n        //     // We have to create a link to the file\n        //     downloadLink.href = window.URL.createObjectURL(csvFile);\n        //     // Make sure that the link is not displayed\n        //     downloadLink.style.display = \"none\";\n        //     // Add the link to your DOM\n        //     document.body.appendChild(downloadLink);\n        //     // Lanzamos\n        //     downloadLink.click();\n        // },\n\n        // format date\n        getDateString (date, format) {\n            var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n                // var months = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'],\n                getPaddedComp = function (comp) {\n                    return ((parseInt(comp) < 10) ? ('0' + comp) : comp)\n                },\n                formattedDate = format,\n                o = {\n                    \"y+\": date.getFullYear(), // year\n                    \"M+\": months[date.getMonth()], //month\n                    \"d+\": getPaddedComp(date.getDate()), //day\n                    \"h+\": getPaddedComp((date.getHours() > 12) ? date.getHours() % 12 : date.getHours()), //hour\n                    \"H+\": getPaddedComp(date.getHours()), //hour\n                    \"m+\": getPaddedComp(date.getMinutes()), //minute\n                    \"s+\": getPaddedComp(date.getSeconds()), //second\n                    \"S+\": getPaddedComp(date.getMilliseconds()), //millisecond,\n                    \"b+\": (date.getHours() >= 12) ? 'PM' : 'AM'\n                };\n            for (var k in o) {\n                if (new RegExp(\"(\" + k + \")\").test(format)) {\n                    formattedDate = formattedDate.replace(RegExp.$1, o[k]);\n                }\n            }\n            return formattedDate;\n        },\n        getDayFromDate (date) {\n            var dt = new Date(date);\n            if (dt.getDay() == 0) {\n                return 'Sunday'\n            } else if (dt.getDay() == 1) {\n                return 'Monday'\n            } else if (dt.getDay() == 2) {\n                return 'Tuesday'\n            } else if (dt.getDay() == 3) {\n                return 'Wednesday'\n            } else if (dt.getDay() == 4) {\n                return 'Thursday'\n            } else if (dt.getDay() == 5) {\n                return 'Friday'\n            } else if (dt.getDay() == 6) {\n                return 'Saturday'\n            }\n        },\n        // async JSONToCSVConvertor (JSONData, ReportTitle, ShowLabel) {\n        //     //If JSONData is not an object then JSON.parse will parse the JSON string in an Object\n        //     var arrData = typeof JSONData != 'object' ? JSON.parse(JSONData) : JSONData;\n\n        //     var CSV = '';\n        //     //Set Report title in first row or line\n\n        //     CSV += ReportTitle + '\\r\\n\\n';\n\n        //     //This condition will generate the Label/Header\n        //     if (ShowLabel) {\n        //         var row = \"\";\n\n        //         //This loop will extract the label from 1st index of on array\n        //         for (var index in arrData[0]) {\n\n        //             //Now convert each value to string and comma-seprated\n        //             row += index + ',';\n        //         }\n\n        //         row = row.slice(0, -1);\n\n        //         //append Label row with line break\n        //         CSV += row + '\\r\\n';\n        //     }\n\n        //     //1st loop is to extract each row\n        //     for (var i = 0; i < arrData.length; i++) {\n        //         var row = \"\";\n\n        //         //2nd loop will extract each column and convert it in string comma-seprated\n        //         for (var index in arrData[i]) {\n        //             row += '\"' + arrData[i][index] + '\",';\n        //         }\n\n        //         row.slice(0, row.length - 1);\n\n        //         //add a line break after each row\n        //         CSV += row + '\\r\\n';\n        //     }\n\n        //     if (CSV == '') {\n        //         alert(\"Invalid data\");\n        //         return;\n        //     }\n\n        //     //Generate a file name\n        //     var fileName = \"MyReport_\";\n        //     //this will remove the blank-spaces from the title and replace it with an underscore\n        //     fileName += ReportTitle.replace(/ /g, \"_\");\n\n        //     //Initialize file format you want csv or xls\n        //     var uri = 'data:text/csv;charset=utf-8,' + escape(CSV);\n\n        //     // Now the little tricky part.\n        //     // you can use either>> window.open(uri);\n        //     // but this will not work in some browsers\n        //     // or you will not get the correct file extension    \n\n        //     //this trick will generate a temp <a /> tag\n        //     var link = document.createElement(\"a\");\n        //     link.href = uri;\n\n        //     //set the visibility hidden so it will not effect on your web-layout\n        //     link.style = \"visibility:hidden\";\n        //     link.download = fileName + \".csv\";\n\n        //     //this part will append the anchor tag and remove it after automatic click\n        //     document.body.appendChild(link);\n        //     link.click();\n        //     document.body.removeChild(link);\n        // },\n        // sumValues () {\n        //     return 500;\n        // },\n\n        /***Method to create and download CSV File */\n\n        downloadUnicodeCSV(objArray) {\n            var arr = typeof objArray !== 'object' ? JSON.parse(objArray) : objArray;\n            var str =`${Object.keys(arr[0]).map((value) => `\"${value}\"`).join(',')}` + '\\r\\n';\n            var csvContent = arr.reduce((st, next) => {\n            st += `${Object.values(next).map((value) => `\"${value}\"`).join(',')}` + '\\r\\n';\n            return st;\n            }, str);\n            var element = document.createElement('a');\n            element.href = 'data:text/csv;charset=utf-8,' + encodeURI(csvContent);\n            // console.table(csvContent)\n            element.target = '_blank';\n            element.download = 'Document.csv';\n            element.click();\n          },\n\n          ruppesFormat (num) {\n            var n1, n2;\n            num = num + \"\" || \"\";\n            // works for integer and floating as well\n            n1 = num.split(\".\");\n            n2 = n1[1] || null;\n            n1 = n1[0].replace(/(\\d)(?=(\\d\\d)+\\d$)/g, \"$1,\");\n            num = n2 ? n1 + \".\" + n2 : n1;\n            return num;\n        },\n\n        getDate(){\n            const obj = {date};\n\nconst date = new Date(obj.date * 1000); \n\nconsole.log(new Intl.DateTimeFormat('en-GB').format(date));\n        }\n    },\n};\n"],"mappings":"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"}]}