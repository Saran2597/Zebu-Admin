{"remainingRequest":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/node_modules/babel-loader/lib/index.js!/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/src/store/modules/sector.js","dependencies":[{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/src/store/modules/sector.js","mtime":1654503973615},{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/babel.config.js","mtime":1654503973575},{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["service","router","sector","namespaced","state","sectorData","sectorMappedData","mutations","SET_SECTORDATA","data","SET_SECTORMAPPEDDATA","actions","createSector","jsonObj","commit","then","response","status","message","msg","show","color","timeout","root","push","path","query","tab","getSector","result","deleteSector","dispatch","getSectorMappedData","getSectorMappingDetails","createSectorMapping","deleteSectorMapping","getters","getSectorData"],"sources":["/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/src/store/modules/sector.js"],"sourcesContent":["import service from '../../store/httpService.js'\nimport router from '@/router'\n\nconst sector = {\n    namespaced: true,\n    state: {\n        sectorData: [],\n        sectorMappedData: [],\n    },\n    mutations: {\n        SET_SECTORDATA: (state, data) => {\n            state.sectorData = data\n        },\n        SET_SECTORMAPPEDDATA: (state, data) => {\n            state.sectorMappedData = data\n        }\n    },\n    actions: {\n        async createSector ({ commit }, jsonObj) {\n            await service.createSector(jsonObj).then(response => {\n                if (response.status == 200 && response.data.message == 'Success') {\n                    commit('SET_SNAKBAR', { msg: 'sector created successfully', show: true, color: 'teal darken-1', timeout: 2500 }, { root: true })\n                    router.push({ path: 'content', query: { tab: 'Sector' } }).catch(() => { })\n                } else {\n                    commit('SET_SNAKBAR', { msg: response.data.message, show: true, color: 'red lighten-1', timeout: 2500 }, { root: true })\n                }\n            }).finally(() => { })\n        },\n        async getSector ({ commit }, jsonObj) {\n            commit('SET_LOADER', true, { root: true })\n            await service.getSector().then(response => {\n                if (response.status == 200 && response.data.result) {\n                    commit('SET_SECTORDATA', response.data.result)\n                } else {\n                    commit('SET_SECTORDATA', [])\n                    commit('SET_SNAKBAR', { msg: response.data.message, show: true, color: 'red lighten-1', timeout: 2500 }, { root: true })\n                }\n            }).finally(() => { commit('SET_LOADER', false, { root: true }) })\n        },\n        async deleteSector ({ commit, dispatch }, jsonObj) {\n            commit('SET_LOADER', true, { root: true })\n            await service.deleteSector(jsonObj).then(response => {\n                if (response.status == 200) {\n                    commit('SET_SNAKBAR', { msg: 'sector deleted successfully', show: true, color: 'teal darken-1', timeout: 2500 }, { root: true })\n                    dispatch('getSector')\n                } else {\n                    commit('SET_SNAKBAR', { msg: response.data.message, show: true, color: 'red lighten-1', timeout: 2500 }, { root: true })\n                }\n            }).finally(() => { commit('SET_LOADER', false, { root: true }) })\n        },\n\n        async getSectorMappedData ({ commit }, jsonObj) {\n            commit('SET_LOADER', true, { root: true })\n            await service.getSectorMappingDetails(jsonObj).then(response => {\n                if (response.status == 200 && response.data.message == 'Success' && response.data.result) {\n                    commit('SET_SECTORMAPPEDDATA', response.data.result)\n                } else {\n                    commit('SET_SECTORMAPPEDDATA', [])\n                }\n            }).finally(() => { commit('SET_LOADER', false, { root: true }) })\n        },\n\n        async createSectorMapping ({ commit }, jsonObj) {\n            commit('SET_LOADER', true, { root: true })\n            await service.createSectorMapping(jsonObj).then(response => {\n                if (response.status == 200 && response.data.message == 'Success') {\n                    commit('SET_SNAKBAR', { msg: 'sector mapping created successfully', show: true, color: 'teal darken-1', timeout: 2500 }, { root: true })\n                    router.push('/sectorDetails').catch(() => { })\n                } else {\n                    commit('SET_SNAKBAR', { msg: response.data.message, show: true, color: 'red lighten-5', timeout: 2500 }, { root: true })\n                }\n            }).finally(() => { commit('SET_LOADER', false, { root: true }) })\n        },\n\n        async deleteSectorMapping ({ commit }, jsonObj) {\n            commit('SET_LOADER', true, { root: true })\n            await service.deleteSectorMapping(jsonObj).then(response => {\n                if (response.status == 200) {\n                    commit('SET_SNAKBAR', { msg: 'Sector deleted successfully', show: true, color: 'teal darken-1', timeout: 2500 }, { root: true })\n                    router.push('/sectorDetails').catch(() => { })\n                } else {\n                    commit('SET_SNAKBAR', { msg: response.data.message, show: true, color: 'red lighten-5', timeout: 2500 }, { root: true })\n                }\n            }).finally(() => { commit('SET_LOADER', false, { root: true }) })\n        }\n    },\n    getters: {\n        getSectorData: state => {\n            return state.sectorData\n        },\n        getSectorMappedData: state => {\n            return state.sectorMappedData\n        }\n    }\n}\nexport default sector;"],"mappings":"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"}]}