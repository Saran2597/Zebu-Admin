{"remainingRequest":"/home/stoneage/VUE.JS Projects/Zebu-Admin/node_modules/babel-loader/lib/index.js!/home/stoneage/VUE.JS Projects/Zebu-Admin/src/store/modules/mobileVersion.js","dependencies":[{"path":"/home/stoneage/VUE.JS Projects/Zebu-Admin/src/store/modules/mobileVersion.js","mtime":1668699986598},{"path":"/home/stoneage/VUE.JS Projects/Zebu-Admin/babel.config.js","mtime":1654503973575},{"path":"/home/stoneage/VUE.JS Projects/Zebu-Admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stoneage/VUE.JS Projects/Zebu-Admin/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["service","router","mobileVersion","namespaced","state","getMobileVersionDetails","mutations","GET_MOBILE_DETAILS","payload","actions","getMobileVersionInfo","commit","getMobileVersionData","then","response","status","data","stat","result","idx","err","console","log","addMobVersion","dispatch","addMobileVersionData","msg","message","show","color","timeout","root","deleteMobVersion","deleteMobileVersion","error","upDateMobVersion","upDateMobileVersion","getters","getMobileVersion"],"sources":["/home/stoneage/VUE.JS Projects/Zebu-Admin/src/store/modules/mobileVersion.js"],"sourcesContent":["import service from '../../store/httpService.js'\nimport router from '@/router'\n\n\nconst mobileVersion = {\n    namespaced: true,\n    state: {\n        getMobileVersionDetails: []\n    },\n    mutations: {\n        GET_MOBILE_DETAILS(state, payload) {\n            state.getMobileVersionDetails = payload\n        }\n    },\n    actions: {\n\n        async getMobileVersionInfo({\n            state,\n            commit\n        }, payload) {\n            await service.getMobileVersionData(payload).then(response => {\n                if (response.status == 200) {\n                    if (response.data.stat == 'Ok') {\n                        for (let idx of response.data.result) {\n                            if (idx['deviceType'] == idx['deviceType']) {\n                                commit('GET_MOBILE_DETAILS', response.data.result)\n                            }\n                        }\n                    }\n                } else {\n                    commit('GET_MOBILE_DETAILS', [])\n                }\n            }, (err) => {\n                console.log(err);\n            }).finally(({\n\n            }))\n        },\n\n        async addMobVersion({\n            state,\n            commit,\n            dispatch\n        }, payload) {\n            await service.addMobileVersionData(payload).then(response => {\n                if (response.status == 200) {\n                    if (response.data.stat == 'Ok') {\n                        dispatch('getMobileVersionInfo')\n                    }\n                } else {\n                    commit('SET_SNAKBAR', { msg: response.data.message, show: true, color: 'red lighten-1', timeout: 2500 }, { root: true })  \n                }\n            }, (err) => {\n                console.log(err);\n            }).finally(({\n\n            }))\n        },\n\n        async deleteMobVersion({\n            state,\n            commit,\n            dispatch,\n        }, payload) {\n            await service.deleteMobileVersion(payload).then(response => {\n                if (response.status == 200) {\n                    if (response.data.stat == 'Ok') {\n                        commit('SET_SNAKBAR', { msg: 'Deleted Successfully', show: true, color: 'teal darken-1', timeout: 2500 }, { root: true })\n                        dispatch('getMobileVersionInfo')\n                    }\n                }\n                else{\n                    commit('SET_SNAKBAR', { msg: response.data.message, show: true, color: 'red lighten-1', timeout: 2500 }, { root: true })  \n                }\n            }, (error) => {\n                console.log(error);\n            }).finally(({\n\n            }))\n        },\n        \n        async upDateMobVersion({state, commit,dispatch},payload){\n            await service.upDateMobileVersion(payload).then(response => {\n                if (response.status == 200 && response.data.stat == 'Ok') {\n                        commit('SET_SNAKBAR', { msg: 'Updated Successfully', show: true, color: 'teal darken-1', timeout: 2500 }, { root: true })\n                        dispatch('getMobileVersionInfo')\n                  }\n                    else{\n                        commit('SET_SNAKBAR', { msg: response.data.message, show: true, color: 'red lighten-1', timeout: 2500 }, { root: true })    \n                }\n            }, (error) => {\n                console.log(error);\n            }).finally(({\n\n            }))\n        }\n\n    },\n    getters: {\n        getMobileVersion: (state) => {\n            return state.getMobileVersionDetails\n        }\n    }\n\n}\n\nexport default mobileVersion"],"mappings":"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"}]}