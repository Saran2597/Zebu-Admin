{"remainingRequest":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/src/views/apiKey.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/src/views/apiKey.vue","mtime":1668781304767},{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5wb3NpdGlvbi1yZWxhdGl2ZSB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwp9CgoucG9zaXRpb24tYWJzb2x1dGUgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKfQoKLnJpZ2h0LTAgewogIHJpZ2h0OiAyNHB4OwogIHRvcDogMjAlOwp9Cgp2LWljb246ZGlzYWJsZWQgewogIGN1cnNvcjogbm90LWFsbG93ZWQgIWltcG9ydGFudDsKfQo="},{"version":3,"sources":["apiKey.vue"],"names":[],"mappingsirCA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"apiKey.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <div class=\"d-flex align-center px-4 py-2 mt-2\">\n      <div class=\"w-100\">\n        <div class=\"font-weight-bold primaryColor\">API KEY\n          <v-progress-circular class=\"ml-2\" indeterminate v-if=\"loading\" size=\"18\" :width=\"2\" color=\"black\">\n          </v-progress-circular>\n        </div>\n        <div class=\"pt-3 d-flex justify-space-between\">\n          <div>\n            <v-slide-group v-model=\"tabSelect\" mandatory>\n              <v-slide-item v-for=\"n in tabs\" :key=\"n\" v-slot=\"{ active, toggle }\" :value=\"n\">\n                <span @click=\"date = null; userId1 = ''\">\n                  <v-btn :title=\"n\" depressed height=\"26\" class=\"fsize12 text-capitalize mr-2\" @click=\"toggle\"\n                    :color=\"active ? 'primary' : 'grey lighten-3'\">{{ n }}</v-btn>\n                </span>\n              </v-slide-item>\n            </v-slide-group>\n          </div>\n        </div>\n      </div>\n    </div>\n    <v-divider class=\"mx-4\"></v-divider>\n    <v-form ref=\"forms\" v-model=\"formValid\" @submit.prevent=\"getApiKeyDetails('get')\">\n      <v-card class=\"ma-4 cardBoxShadow rounded-lg\" v-if=\"tabSelect == 'API Key Details'\">\n        <v-row no-gutters class=\"px-4 py-10\">\n          <v-col cols=\"12\" sm=\"12\" md=\"6\" lg=\"3\">\n            <div class=\"fsize14 font-weight-bold primaryColor pb-4\">API Key Details</div>\n          </v-col>\n          <v-col cols=\"12\" sm=\"12\" md=\"6\" lg=\"5\">\n            <div class=\"primaryColor fsize14 pb-1\">*UserId</div>\n            <v-text-field clearable class=\"apiKeyInput\" placeholder=\"Enter UserId\"\n              @input=\"userId = userId ? userId.toUpperCase() : ''\" v-model=\"userId\" outlined dense :rules=\"userIdRules\">\n            </v-text-field>\n          </v-col>\n          <v-col cols=\"12\" sm=\"12\" md=\"6\" lg=\"4\">\n          </v-col>\n        </v-row>\n        <div class=\"pa-10 font-weight-bold\" v-if=\"apiKeyDetails\">\n          <div class=\"d-flex mb-3\" style=\"min-width:350px;overflow:auto\">\n            <div class=\"primaryColor fsize14\">User Id : &nbsp;</div>\n            <div class=\"secondaryColor fsize14\">{{ apiKeyDetails.user_id }}</div>\n          </div>\n          <div class=\"d-flex mb-3\" style=\"min-width:350px;overflow:auto\">\n            <div class=\"primaryColor fsize14\">API Key : &nbsp;</div>\n            <div class=\"secondaryColor fsize14\"> {{ apiKeyDetails.api_key ? apiKeyDetails.api_key : '' }}</div>\n          </div>\n          <div class=\"d-flex mb-3\" style=\"min-width:350px;overflow:auto\">\n            <div class=\"primaryColor fsize14\">Created On : &nbsp;</div>\n            <div class=\"secondaryColor fsize14\"> {{ apiKeyDetails.created_on ? `${getDateString(new\n                Date(apiKeyDetails.created_on.split(' ')[0]), \"d-M-y\")} ${apiKeyDetails.created_on.split(' ')[1]}` : ''\n            }}\n            </div>\n          </div>\n          <div class=\"d-flex mb-3\" style=\"min-width:350px;overflow:auto\">\n            <div class=\"primaryColor fsize14\">Expiry Date : &nbsp;</div>\n            <div class=\"\">\n              <div class=\"secondaryColor fsize14\"> {{ apiKeyDetails.expiry_date ? getDateString(new\n                  Date(apiKeyDetails.expiry_date.split(' ')[0]), \"d-M-y\") : ''\n              }}</div>\n            </div>\n          </div>\n          <div class=\"d-flex py-4\">\n            <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n              <v-menu v-model=\"dateMenu\" :close-on-content-click=\"false\" transition=\"scale-transition\" offset-y\n                max-width=\"290px\" min-width=\"auto\">\n                <template v-slot:activator=\"{ on, attrs }\">\n                  <v-text-field @click:append=\"dateMenu = true\" class=\"apiKeyInput\" v-model=\"computedDateFormatted\"\n                    outlined persistent-hint :menu-props=\"{ bottom: true, offsetY: true }\" :rules=\"dateRules\"\n                    placeholder=\"Select the Date\" append-icon=\"mdi-calendar\" readonly dense v-bind=\"attrs\" v-on=\"on\">\n                  </v-text-field>\n                </template>\n                <v-date-picker :min=\"new Date().toISOString().substr(0, 10)\" v-model=\"date\" :show-current=\"true\"\n                  no-title @input=\"dateMenu = false\"></v-date-picker>\n              </v-menu>\n            </v-form>\n            <div class=\"mx-5\">\n              <v-btn height=\"40\" :loading=\"loading\" depressed @click=\"updateApiKey()\" class=\"text-capitalize fsize12\">\n                Update Date</v-btn>\n            </div>\n          </div>\n        </div>\n      </v-card>\n\n      <v-card class=\"ma-3 cardBoxShadow rounded-lg\" v-if=\"tabSelect == 'Expiry List'\">\n        <v-form ref=\"form\" v-model=\"valid\" @submit.prevent=\"getExpiryList()\" lazy-validation>\n          <div class=\"d-flex align-center\">\n            <div class=\"pa-4\">\n              <div class=\"pb-1\">*From Date</div>\n              <v-menu v-model=\"dateMenu1\" :close-on-content-click=\"false\" transition=\"scale-transition\" offset-y\n                max-width=\"290px\" min-width=\"auto\">\n                <template v-slot:activator=\"{ on, attrs }\">\n                  <v-text-field @click:append=\"dateMenu1 = true\" class=\"apiKeyInput\" v-model=\"computedDateFormatted1\"\n                    outlined persistent-hint :menu-props=\"{ bottom: true, offsetY: true }\" :rules=\"fromDateRules\"\n                    placeholder=\"Select the From Date\" append-icon=\"mdi-calendar\" readonly dense v-bind=\"attrs\"\n                    v-on=\"on\"></v-text-field>\n                </template>\n                <v-date-picker v-model=\"fromDate\" :show-current=\"true\" no-title @input=\"dateMenu1 = false\">\n                </v-date-picker>\n              </v-menu>\n            </div>\n\n            <div class=\"pa-4\">\n              <div class=\"pb-1\">*To Date</div>\n              <v-menu v-model=\"dateMenu2\" :close-on-content-click=\"false\" transition=\"scale-transition\" offset-y\n                max-width=\"290px\" min-width=\"auto\">\n                <template v-slot:activator=\"{ on, attrs }\">\n                  <v-text-field @click:append=\"dateMenu2 = true\" class=\"apiKeyInput\" v-model=\"computedDateFormatted2\"\n                    outlined persistent-hint :menu-props=\"{ bottom: true, offsetY: true }\" :rules=\"toDateRules\"\n                    placeholder=\"Select the To Date\" append-icon=\"mdi-calendar\" readonly dense v-bind=\"attrs\" v-on=\"on\">\n                  </v-text-field>\n                </template>\n                <v-date-picker v-model=\"toDate\" :show-current=\"true\" no-title @input=\"dateMenu2 = false\">\n                </v-date-picker>\n              </v-menu>\n            </div>\n            <v-btn type=\"submit\" height=\"40\" depressed color=\"primary\" class=\"text-capitalize fsize14\">Submit</v-btn>\n          </div>\n        </v-form>\n        <v-simple-table v-if=\"ApiKeyExpiryList.length\">\n          <thead>\n            <tr>\n              <th>User Id</th>\n              <th>Expiry Date</th>\n              <th>created On</th>\n              <th>API Key</th>\n              <!-- <th class=\"text-center\">Action</th> -->\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(i, idex) in ApiKeyExpiryList\" :key=\"idex\" @mouseleave=\"i.showEdit = false\"\n              @mouseover=\"i.showEdit = true\">\n              <td>{{ i.user_id }}</td>\n              <td>{{ getDateString(new Date(i.expiry_date.split(' ')[0]), \"d-M-y\") }}</td>\n              <td>{{ getDateString(new Date(i.created_on.split(' ')[0]), \"d-M-y\") }}</td>\n              <td class=\"position-relative\">\n                {{ i.api_key }}\n                <div v-if=\"i.showEdit\" class=\"position-absolute right-0\">\n                  <v-btn depressed color=\"grey\" width=\"fit-content\" height=\"26\"\n                    class=\"fsize12 text-capitalize white--text\" @click=\"openDailog(i.user_id)\">Update Expiry</v-btn>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </v-simple-table>\n\n        <div v-else class=\"d-flex align-center justify-center min-height-100\">\n          <div class=\"primaryColor fsize20\">No Data Found</div>\n        </div>\n\n        <v-dialog v-model=\"logoutDialog\" width=\"390\" overlay-color=\"white\">\n          <v-card class=\"pa-5 cardBoxShadow rounded-lg\" height=\"220\">\n            <div class=\"secondaryColor fsize14 d-flex justify-space-between\">\n              <div class=\"fsize14 font-weight-bold\">Update Expiry Date</div>\n              <div>\n                <v-icon @click=\"logoutDialog = false\" color=\"light-blue\">mdi-close-circle-outline</v-icon>\n              </div>\n            </div>\n            <div class=\"mt-4\">\n              <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                <div class=\"fsize14 pb-1\">Date</div>\n                <v-menu v-model=\"dateMenu3\" :close-on-content-click=\"false\" transition=\"scale-transition\" offset-y\n                  max-width=\"290px\" min-width=\"auto\">\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-text-field @click:append=\"dateMenu3 = true\" class=\"apiKeyInput\" v-model=\"computedDateFormatted3\"\n                      outlined persistent-hint :menu-props=\"{ bottom: true, offsetY: true }\" :rules=\"dateRules\"\n                      placeholder=\"Select the Date\" append-icon=\"mdi-calendar\" readonly dense v-bind=\"attrs\" v-on=\"on\">\n                    </v-text-field>\n                  </template>\n                  <v-date-picker v-model=\"updateExpiryDate\" :show-current=\"true\" no-title @input=\"dateMenu3 = false\">\n                  </v-date-picker>\n                </v-menu>\n                <div class=\"d-flex justify-end pt-3\">\n                  <v-btn height=\"32\" width=\"86\" @click=\"updateDate()\" depressed outlined text color=\"light-blue\"\n                    class=\"text-capitalize white--text fsize12 mr-2\">\n                    Confirm\n                  </v-btn>\n                  <v-btn height=\"32\" width=\"86\" @click=\"logoutDialog = false\" depressed color=\"black\" outlined text\n                    class=\"text-capitalize fsize12\">\n                    Cancel\n                  </v-btn>\n                </div>\n              </v-form>\n            </div>\n          </v-card>\n        </v-dialog>\n      </v-card>\n\n      <v-card class=\"ma-4 cardBoxShadow rounded-lg\" v-if=\"tabSelect == 'API Calls'\">\n\n        <!-- <v-row no-gutters class=\"px-4 py-10\">\n          <v-col cols=\"12\" sm=\"12\" md=\"6\" lg=\"3\">\n            <div class=\"fsize14 font-weight-bold primaryColor pb-4\">User Id</div>\n            <v-text-field clearable class=\"apiKeyInput\" style=\"width:270px\" placeholder=\"Enter UserId\"  \n              @input=\"userId = userId ? userId.toUpperCase() : ''\" v-model=\"userId\" outlined dense :rules=\"userIdRules\">\n            </v-text-field>\n          </v-col>\n          <v-col cols=\"12\" sm=\"12\" md=\"6\" lg=\"3\">\n            <div class=\"fsize14 font-weight-bold primaryColor pb-4\">Password</div>\n            <v-text-field clearable class=\"apiKeyInput\" style=\"width:270px\"  placeholder=\"Enter password\" width=\"270px\"\n              @input=\"userId = userId ? userId.toUpperCase() : ''\" v-model=\"userId\" outlined dense :rules=\"userIdRules\">\n            </v-text-field>\n          </v-col>\n          <v-col cols=\"12\" sm=\"12\" md=\"6\" lg=\"3\">\n            <div class=\"fsize14 font-weight-bold primaryColor pb-4\">2FA</div>\n            <v-text-field clearable class=\"apiKeyInput\" style=\"width:270px\"  placeholder=\"Enter answer\" width=\"270px\"\n              @input=\"userId = userId ? userId.toUpperCase() : ''\" v-model=\"userId\" outlined dense :rules=\"userIdRules\">\n            </v-text-field>\n          </v-col>\n          <v-col cols=\"12\" sm=\"12\" md=\"6\" lg=\"3\">\n            <div class=\"fsize14 font-weight-bold primaryColor pb-4\"></div>\n            <v-btn type=\"submit\" height=\"40\" depressed color=\"primary\" class=\"text-capitalize fsize14\">Submit</v-btn>\n          </v-col>\n        </v-row> -->\n        <v-form ref=\"form2\" v-model=\"loginForm\" @submit.prevent=\"submitLogin()\">\n          <div class=\"d-flex ml-4 flex-wrap\">\n            <div class=\"mt-4\">\n              <div class=\"fsize14 font-weight-bold primaryColor pb-4\">User Id</div>\n              <v-text-field class=\"apiKeyInput\" style=\"width:270px\" placeholder=\"Enter UserId\" v-model=\"UID\" outlined\n                dense :rules=\"userIDRules\">\n              </v-text-field>\n            </div>\n            <div class=\"mt-4 ml-3\">\n              <div class=\"fsize14 font-weight-bold primaryColor pb-4\">Password</div>\n              <v-text-field class=\"apiKeyInput\" style=\"width:270px\" placeholder=\"Enter password\" v-model=\"uPASS\"\n                outlined dense :rules=\"userPassRules\">\n              </v-text-field>\n            </div>\n            <div class=\"mt-4 ml-3\">\n              <div class=\"fsize14 font-weight-bold primaryColor pb-4\">2FA</div>\n              <v-text-field class=\"apiKeyInput\" style=\"width:270px\" placeholder=\"Enter answer\" v-model=\"answers\"\n                outlined dense :rules=\"user2FaRules\">\n              </v-text-field>\n            </div>\n            <div class=\"mt-4 ml-3\">\n              <div class=\"fsize14 font-weight-bold primaryColor pb-9\"></div>\n              <v-btn type=\"submit\" height=\"40\" depressed color=\"primary\" :disabled=!loginForm\n                class=\"text-capitalize fsize14\">Submit</v-btn>\n            </div>\n          </div>\n          <!-- <v-form ref=\"form\" v-model=\"valid\" @submit.prevent=\"getExpiryList()\" lazy-validation>\n          <div class=\"d-flex align-center\">\n            <div class=\"pa-4\">\n              <div class=\"pb-1\">*From Date</div>\n              <v-menu v-model=\"dateMenu1\" :close-on-content-click=\"false\" transition=\"scale-transition\" offset-y\n                max-width=\"290px\" min-width=\"auto\">\n                <template v-slot:activator=\"{ on, attrs }\">\n                  <v-text-field @click:append=\"dateMenu1 = true\" class=\"apiKeyInput\" v-model=\"computedDateFormatted1\"\n                    outlined persistent-hint :menu-props=\"{ bottom: true, offsetY: true }\" :rules=\"fromDateRules\"\n                    placeholder=\"Select the From Date\" append-icon=\"mdi-calendar\" readonly dense v-bind=\"attrs\"\n                    v-on=\"on\"></v-text-field>\n                </template>\n                <v-date-picker v-model=\"fromDate\" :show-current=\"true\" no-title @input=\"dateMenu1 = false\">\n                </v-date-picker>\n              </v-menu>\n            </div>\n\n            <div class=\"pa-4\">\n              <div class=\"pb-1\">*To Date</div>\n              <v-menu v-model=\"dateMenu2\" :close-on-content-click=\"false\" transition=\"scale-transition\" offset-y\n                max-width=\"290px\" min-width=\"auto\">\n                <template v-slot:activator=\"{ on, attrs }\">\n                  <v-text-field @click:append=\"dateMenu2 = true\" class=\"apiKeyInput\" v-model=\"computedDateFormatted2\"\n                    outlined persistent-hint :menu-props=\"{ bottom: true, offsetY: true }\" :rules=\"toDateRules\"\n                    placeholder=\"Select the To Date\" append-icon=\"mdi-calendar\" readonly dense v-bind=\"attrs\" v-on=\"on\">\n                  </v-text-field>\n                </template>\n                <v-date-picker v-model=\"toDate\" :show-current=\"true\" no-title @input=\"dateMenu2 = false\">\n                </v-date-picker>\n              </v-menu>\n            </div>\n            <v-btn type=\"submit\" height=\"40\" depressed color=\"primary\" class=\"text-capitalize fsize14\">Submit</v-btn>\n          </div>\n        </v-form> -->\n          <v-simple-table v-if=\"ApiKeyExpiryList.length\">\n            <thead>\n              <tr>\n                <th>Scrip Names</th>\n                <th>Response Time</th>\n                <th>Status</th>\n                <th>Action</th>\n                <!-- <th class=\"text-center\">Action</th> -->\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>Login</td>\n                <td>{{ preAuthenticateTimems ? preAuthenticateTimems : 'NA' }}ms</td>\n                <td @click=\"info('1')\">\n                  <v-icon :disabled=\"this.viewResponse\">mdi-eye</v-icon>\n                </td>\n                <td>\n                  <span>NA</span>\n                </td>\n              </tr>\n              <tr>\n                <td>Password</td>\n                <td>{{ passwordTimeMs ? passwordTimeMs : 'NA' }}ms</td>\n                <td>\n                  <v-icon :disabled=\"this.viewResponse2\" @click=\"info('2')\">mdi-eye</v-icon>\n                </td>\n                <td>\n                  <span>NA</span>\n                </td>\n              </tr>\n              <tr>\n                <td>Security Question</td>\n                <td>{{ validansTimeMs ? validansTimeMs : 'NA' }}ms</td>\n                <td>NA</td>\n                <td>\n                  <span>NA</span>\n                </td>\n              </tr>\n              <tr>\n                <td>Holdings</td>\n                <td>{{ holdingsTimeMs }}ms</td>\n                <td>NA</td>\n                <td>\n                  <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.holdingbtn @click=\"getHoldings()\">\n                    SUBMIT</v-btn>\n                </td>\n              </tr>\n              <tr>\n                <td>Positions</td>\n                <td>{{ responseTimeMs ? responseTimeMs : 'NA' }}ms</td>\n                <td>NA</td>\n                <td>\n                  <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=!loginForm @click=\"positionBook()\">\n                    SUBMIT</v-btn>\n                </td>\n              </tr>\n              <tr>\n                <td>Trade-Book</td>\n                <td>{{ tradebookTimeMs ? tradebookTimeMs : 'NA' }}ms</td>\n                <td>NA</td>\n                <td>\n                  <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=!loginForm @click=\"getTradeHistory()\">\n                    SUBMIT</v-btn>\n                </td>\n              </tr>\n              <tr>\n                <td>Order-Book</td>\n                <td>{{ orderbookTimeMs ? orderbookTimeMs : 'NA' }}ms</td>\n                <td>NA</td>\n                <td>\n                  <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=!loginForm @click=\"fetchOrderBook()\">\n                    SUBMIT</v-btn>\n                </td>\n              </tr>\n              <tr>\n                <td>Load Scrips</td>\n                <td>{{ loadScripTimeMs ? loadScripTimeMs : 'NA' }}ms</td>\n                <td>NA</td>\n                <td>\n                  <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=!loginForm @click=\"loadScrips()\">SUBMIT\n                  </v-btn>\n                </td>\n              </tr>\n              <tr>\n                <td>Get Limits</td>\n                <td>{{ getLimitTimeMs ? getLimitTimeMs : 'NA' }}ms</td>\n                <td>NA</td>\n                <td>\n                  <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=!loginForm @click=\"getLimits()\">SUBMIT\n                  </v-btn>\n                </td>\n              </tr>\n            </tbody>\n          </v-simple-table>\n        </v-form>\n        <!-- <div class=\"d-flex\"> \n          <div>\n            <label for=\"\" class=\"pa\">Login</label>\n            <span>\n              <v-btn class=\"ma-4\" depressed small color=\"primary\" @click=\"preAuthenticateKey()\">SUBMIT</v-btn>\n            </span>\n          </div>\n        </div>\n        <div class=\"d-flex\">\n          <div>\n            <label for=\"\">Holdings</label>\n            <span>\n              <v-btn class=\"ma-4\" depressed small color=\"primary\" @click=\"getHoldings()\">SUBMIT</v-btn>\n            </span>\n          </div>\n        </div> -->\n\n        <!-- <v-row>\n          <v-col cols=\"4\">\n            <div>\n              <label for=\"\">Login</label>\n            </div>\n            <div>\n              <label for=\"\">Holdings</label>\n            </div>\n          </v-col>\n          <v-col cols=\"4\">\n\n</v-col>\n<v-col cols=\"4\">\n<div>\n  <v-btn class=\"ma-4\" depressed small color=\"primary\" @click=\"preAuthenticateKey()\">SUBMIT</v-btn>\n</div>\n<div>\n  <v-btn class=\"ma-4\" depressed small color=\"primary\" @click=\"getHoldings()\">SUBMIT</v-btn>\n</div>\n</v-col>\n         </v-row> -->\n\n\n      </v-card>\n      <div class=\"mt-5 pa-4 d-flex justify-end\" v-if=\"tabSelect == 'API Key Details'\">\n        <v-btn height=\"40\" width=\"96\" depressed outlined color=\"grey--text\" class=\" mr-3 text-capitalize\">Cancel</v-btn>\n        <v-btn type=\"submit\" :loading=\"loading\" height=\"40\" width=\"96\" depressed color=\"primary\"\n          class=\"mr-3 text-capitalize\">Submit</v-btn>\n      </div>\n\n    </v-form>\n    <v-dialog v-model=\"dialog\" persistent max-width=\"600\">\n      <template v-slot:activator=\"{}\">\n      </template>\n      <v-card>\n        <v-card-title class=\"text-h5\">\n          Response\n        </v-card-title>\n        <v-card-text>{{ this.responseData }}</v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n\n          <v-btn color=\"red darken-1\" text @click=\"dialog = false\">\n            CLOSE\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n\n <!-- <script data-main=\"js/config\" src=\"js/lib/require.js\" ></script>  -->\n<script>\nimport { mapGetters } from \"vuex\";\nimport commonFunc from \"../mixins/commonFunctions\";\nimport axios from \"axios\";\nimport CryptoJS from 'crypto-js'\n// import JSEncrypt from 'jsencrypt/bin/jsencrypt.min.js'\nimport { JSEncrypt } from 'jsencrypt';\n\nrequire('crypto-js')\nexport default {\n  name: \"apiKey\",\n  mixins: [commonFunc],\n\n  data: () => ({\n    tabs: [\"API Key Details\", \"Expiry List\", \"API Calls\"],\n    tabSelect: \"Reset\",\n    userId: \"\",\n    userId1: \"\",\n    date: null,\n    fromDate: null,\n    toDate: null,\n    updateExpiryDate: null,\n    dateMenu: false,\n    dateMenu1: false,\n    dateMenu2: false,\n    dateMenu3: false,\n    viewResponse: true,\n    viewResponse2: true,\n    holdingbtn: true,\n    dialog: false,\n    userIdRules: [(v) => !!v || \"UserId is required\"],\n    userId1Rules: [(v) => !!v || \"UserId is required\"],\n    dateRules: [(v) => !!v || \"Date is required\"],\n    fromDateRules: [(v) => !!v || \"From Date is required\"],\n    toDateRules: [(v) => !!v || \"To Date is required\"],\n    valid: true,\n    loginForm: true,\n    formValid: true,\n    logoutDialog: false,\n    expiryDate: \"\",\n    currentUserId: \"\",\n    showUpdate: false,\n    userIdRules: [\n      (v) => !!v || \"User Id is required\",\n      (v) =>\n        (v && v.length >= 2) || \"User Id must be greater than 2 characters\",\n    ],\n    userIDRules: [\n      (v) => !!v || \"User Id is required\",\n\n    ],\n    userPassRules: [\n      (v) => !!v || \"Password is required\",\n\n    ],\n    user2FaRules: [\n      (v) => !!v || \"2FA is required\",\n\n    ],\n    sPubKey1: \"\",\n    secret: \"123#$%\",\n    jSessionId: \"\",\n    encryptPublicKey: \"\",\n    sPubKey3: \"\",\n    sPubKey5: \"\",\n    publicKey1: '',\n    encryptKEY: '',\n    privateKey1: '',\n    receiveDate: '',\n    sendDate: '',\n    holdingsTimeMs: '',\n    responseTimeMs: '',\n    passwordTimeMs: '',\n    preAuthenticateTimems: '',\n    getLimitTimeMs: '',\n    scripLoadTimeMs: '',\n    loadScripTimeMs: '',\n    validansTimeMs: '',\n    tradebookTimeMs: '',\n    orderbookTimeMs: '',\n    pubKey: '',\n    userSessionID: '',\n    passwordResponse: '',\n    Encdata3: '',\n    Encdata4: '',\n    Encdata5: '',\n    Encdata6: '',\n    sampleKey: '',\n    sPrivateKey: '',\n    responseData2: '',\n    tokenId: '',\n    // sPublicKey: Sample.gen_public_key(),\n    // sPrivateKey: Sample.gen_private_key(),\n    // Encdata: Sample.encrypt(data, sPublicKey),\n    // Decdata: Sample.decryptKey(sPrivateKey, Encdata),\n    // hashData1000: Sample.hash_String(data),\n    UID: \"\",\n    uPASS: \"\",\n    answers: \"\",\n    setAns: \"|1\",\n    responseData: ''\n  }),\n\n  computed: {\n    ...mapGetters(\"apiKey\", {\n      apiKeyDetails: \"getApiKeyDetails\",\n      ApiKeyExpiryList: \"getApiKeyExpiryList\",\n    }),\n    ...mapGetters({\n      loading: \"getLoader\",\n    }),\n    computedDateFormatted: {\n      get() {\n        return this.formatDate(this.date);\n      },\n      set() { },\n    },\n    computedDateFormatted1: {\n      get() {\n        return this.formatDate(this.fromDate);\n      },\n      set() { },\n    },\n    computedDateFormatted2: {\n      get() {\n        return this.formatDate(this.toDate);\n      },\n      set() { },\n    },\n    computedDateFormatted3: {\n      get() {\n        return this.formatDate(this.updateExpiryDate);\n      },\n      set() { },\n    },\n  },\n\n  watch: {\n    tabSelect(tab) {\n      this.$store.commit(\"apiKey/SET_API_KEY_DETAILS\", null);\n      this.fromDate = new Date().toISOString().substr(0, 10);\n      this.toDate = new Date(Date.now() + 14 * 24 * 60 * 60 * 1000)\n        .toISOString()\n        .substr(0, 10);\n      tab == \"Expiry List\" ? this.getExpiryList(\"initial\") : \"\";\n    },\n  },\n\n  created() {\n\n  },\n\n  mounted() {\n    this.getInitialKey()\n    this.tokenId = localStorage.getItem('tomcatCount')\n\n\n\n  },\n\n  methods: {\n\n\n    info(val) {\n      this.dialog = true\n      // this.viewResponse = false\n      if (val == 1) {\n        if (this.viewResponse == true) {\n          this.dialog = false;\n        }\n        this.responseData = this.sPubKey5\n        console.log(this.responseData);\n      }\n      else if (val == 2) {\n\n        this.dialog = true\n        this.responseData = this.passwordResponse\n        console.log(this.responseData);\n        // this.viewResponse = false\n      }\n    },\n\n    submitLogin() {\n\n      this.preAuthenticateKey()\n\n\n    },\n    async getApiKeyDetails(type) {\n      if (this.$refs.forms.validate()) {\n        let formData = new FormData();\n        formData.append(\n          \"userId\",\n          type == \"update\" ? this.apiKeyDetails.user_id : this.userId\n        );\n        await this.$store.dispatch(\"apiKey/getApiKeyDetails\", {\n          data: formData,\n          type: type,\n        });\n      }\n    },\n    async updateApiKey() {\n      let formData = new FormData();\n      formData.append(\"userId\", this.apiKeyDetails.user_id);\n      formData.append(\"expiryDate\", this.date);\n      await this.$store.dispatch(\"apiKey/updateApiKey\", formData);\n      this.resetUpdateApiKeyForm();\n      this.getApiKeyDetails(\"update\");\n    },\n\n    resetUpdateApiKeyForm() {\n      this.userId1 = \"\";\n      this.date = null;\n      this.$refs.form.resetValidation();\n    },\n    formatDate(date) {\n      if (!date) return null;\n      const [year, month, day] = date.split(\"-\");\n      return `${day}/${month}/${year}`;\n    },\n    getExpiryList(val) {\n      if (val == \"initial\") {\n        let fd = new FormData();\n        fd.append(\"from_date\", this.fromDate);\n        fd.append(\"to_date\", this.toDate);\n        this.$store.dispatch(\"apiKey/getApiExpiryList\", fd);\n      } else if (this.$refs.form.validate()) {\n        let fd = new FormData();\n        fd.append(\"from_date\", this.fromDate);\n        fd.append(\"to_date\", this.toDate);\n        this.$store.dispatch(\"apiKey/getApiExpiryList\", fd);\n      }\n    },\n\n    formatDate(date) {\n      if (!date) return null;\n      const [year, month, day] = date.split(\"-\");\n      return `${day}/${month}/${year}`;\n    },\n\n    openDailog(val) {\n      this.$refs.form.reset();\n      if (val) {\n        this.logoutDialog = true;\n      }\n      this.currentUserId = val;\n    },\n\n    async updateDate() {\n      if (this.$refs.form.validate()) {\n        let formData = new FormData();\n        formData.append(\"expiryDate\", this.updateExpiryDate);\n        formData.append(\"userId\", this.currentUserId);\n        await this.$store.dispatch(\"apiKey/updateApiKey\", formData);\n        this.getExpiryList();\n        this.resetUpdateApiKeyForm();\n        this.logoutDialog = false;\n      }\n    },\n\n    ///METHOD TO ENCRPTY//\n\n    encryptBlock: function (src, publicKey, keySize) {\n      var crypt = new JSEncrypt();\n      crypt.setPublicKey(publicKey);\n      var numberOfBytes = parseInt(parseInt(keySize / 8) - 11);\n\n      var start = 0;\n      var end = numberOfBytes;\n      var encryptedString = \"\";\n\n      if (numberOfBytes > src.length) {\n        end = src.length;\n      }\n\n      do {\n        var bytes = src.substring(start, end);\n        encryptedString += crypt.encrypt(bytes);\n        encryptedString += '\\n';\n\n        start = end;\n        end = end + numberOfBytes;\n        if (end > src.length) {\n          end = src.length;\n        }\n      } while (end < src.length);\n\n      if ((end - start) > 0) {\n        var bytes = src.substring(start, end);\n        encryptedString += crypt.encrypt(bytes);\n        encryptedString += '\\n';\n      }\n      return btoa(encryptedString);\n    },\n    decrypt(privateKey, src) {\n      debugger\n      var plainText = '';\n      var crypt = new JSEncrypt();\n      crypt.setPublicKey(privateKey);\n      var encryptedText = window.atob(src);\n      var encryptArray = encryptedText.split('\\n');\n      for (var i = 0; i < encryptArray.length; i = i + 1) {\n        var block = encryptArray[i];\n        if (block != '') {\n          plainText += crypt.decrypt(block);\n        }\n      }\n      return plainText;\n    },\n    decryptKey: function (sPrivateKey, Encdata) {\n      debugger\n      console.log(sPrivateKey);\n      console.log(Encdata);\n      // var decryptedData = this.decrypt(sPrivateKey, Encdata);\n      var decryptedData = this.decrypt1(sPrivateKey, decryptedData);\n      return decryptedData;\n    },\n\n    decrypt1(privateKey, decryptedData) {\n      var entropy = 'Testing of RSA algorithm in javascript.';\n      var crypt1 = new JSEncrypt({\n        rsaStandard: 'RSA-OAEP',\n        entropy: entropy\n      });\n      // var rsa = new RSA({\n      //   entropy: entropy\n      // });\n      // decrypted = crypt1.decrypt(privateKey, encrypted);\n      // console.log('decrypted', decrypted);\n\n\n      var plainText = '';\n      var crypt = new JSEncrypt();\n      crypt.setPublicKey(privateKey);\n      var encryptedText = window.atob(src);\n      var encryptArray = encryptedText.split('\\n');\n      for (var i = 0; i < encryptArray.length; i = i + 1) {\n        var block = encryptArray[i];\n        if (block != '') {\n          debugger\n          plainText += crypt1.decrypt(privateKey, block);\n        }\n      }\n      return plainText;\n    },\n\n\n\n    //Method to sub-encryption common-method//\n\n\n    gen_public_key: function () {\n      var generateKeys = new JSEncrypt({ default_key_size: 2048 });\n      var publicKey = generateKeys.getPublicKey();\n      return publicKey;\n    },\n    gen_private_key: function () {\n      var generateKeys = new JSEncrypt({ default_key_size: 2048 });\n      var privateKey = generateKeys.getPrivateKey();\n      return privateKey;\n    },\n    encrypt: function (data, sPublicKey) {\n      var encryptedData = this.encryptBlock(data, sPublicKey, 2048);\n      return encryptedData;\n    },\n\n    hash_String: function (str) {\n\n      var hashed_str = CryptoJS.SHA256(str);\n      for (var i = 1; i <= 999; i++) {\n        hashed_str = CryptoJS.SHA256(hashed_str);\n      }\n      return hashed_str.toString();\n    },\n\n\n    getInitialKey() {\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/GetInitialKey\")\n        .then(response => {\n          if (response.status == 200 && response.data.stat == 'Ok') {\n            console.log(response.data.publicKey);\n            this.sPubKey1 = response.data.publicKey\n            this.encryptPublicKey = window.atob(this.sPubKey1)\n            console.log(this.encryptPublicKey,);\n            localStorage.setItem('encrptKey', (this.encryptPublicKey))\n            console.log(this.encryptPublicKey);\n            this.jSessionId = response.data.tomcatCount\n            localStorage.setItem('tomcatCount', (this.jSessionId))\n            console.log(this.jSessionId);\n          }\n        })\n        .catch(e => {\n          console.log(e);\n        })\n\n    },\n\n\n\n    preAuthenticateKey() {\n      this.viewResponse = false\n      this.viewResponse2 = true\n\n      var sPubKey2 = this.gen_public_key();\n      //encrypt the input\n      this.Encdata3 = this.encrypt(sPubKey2, this.encryptPublicKey);\n      console.log(this.Encdata3);\n\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/GetPreAuthenticationKey?jsessionid=.\" + this.tokenId + \"&jData=\" + this.Encdata3 + \"&jKey=\" + hashData)\n        .then(response => {\n          this.receiveDate = (new Date()).getTime();\n          this.preAuthenticateTimems = this.receiveDate - this.sendDate;\n          if (response.status == 200 && response.data.stat == 'Ok') {\n            this.sPubKey5 = response.data.publicKey3\n            console.log(this.sPubKey5);\n            var sPrivateKey = this.gen_private_key()\n            console.log(sPrivateKey);\n            this.holdingbtn = false\n            // this.sampleKey = this.decryptKey(sPrivateKey, this.sPubKey5)\n            // console.log(this.sampleKey);\n            // this.sPubKey5 =  this.decryptKey(sPrivateKey, this.sPubKey5);\n            // console.log(this.sPubKey5);\n            this.validatePassword()\n          }\n\n        })\n        .catch(e => {\n          console.log(e);\n        })\n    },\n    validatePassword() {\n      this.viewResponse2 = false\n      this.viewResponse = true\n      var jsonSendObj = {\n        \"uid\": this.UID,\n        \"pwd\": this.hash_String(this.uPASS),\n        // \"pwd\": hash,\n        \"ftl\": \"N\",\n        \"apk\": \"1.6.1.12\",\n        \"Imei\": \"0000\",\n        \"Source\": \"WEB\"\n      };\n      console.log(jsonSendObj);\n      this.Encdata4 = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      console.log(this.Encdata4);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/ValidPwd?jsessionid=.\" + this.tokenId + \"&jData=\" + this.Encdata4 + \"&jKey=\" + hashData)\n        .then(response => {\n          this.receiveDate = (new Date()).getTime();\n          this.passwordTimeMs = this.receiveDate - this.sendDate;\n          if (response.status == 200 && response.data.stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data.Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n            if (response.data['Emsg'] === 'User Blocked Contact System Administrator') {\n              this.unBlockUser()\n            }\n          }\n          else if (response.data['2faResetFlag'] === 'Yes' && response.data['scount'] > 2) {\n            this.save2FAAnswers(data)\n          }\n          else {\n            var questionsCount = JSON.parse(response.data.scount);\n            var sIndex = JSON.parse(response.data.sIndex);\n            this.passwordResponse = response.data\n            console.log(sIndex);\n            this.validate2fa(questionsCount, response.data.sIndex);\n          }\n\n        })\n        .catch(e => {\n          console.log(e);\n        })\n    },\n    save2FAAnswers(pData) {\n      var qIndex = JSON.parse(pData)['sIndex'];\n      var questions = qIndex.split('|');\n      var qa = questions[0] + setAns;\n      for (var count = 1; count < 5; count++) {\n        qa = qa + '|' + questions[count] + setAns;\n      }\n      var jsonSendObj = {\n        \"uid\": this.UID,\n        \"qa\": qa\n      }\n      //Encrypt the json object with Public key3              \n      var uid = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      console.log(uid);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/SaveAns?jsessionid=.\" + this.tokenId + \"&jData=\" + uid + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200) {\n            var save2FAAns = response.data;\n            console.log(save2FAAns);\n          }\n          else {\n            // this.getHoldings();\n          }\n        })\n        .catch(e => {\n          console.log(e);\n        })\n\n    },\n    validate2fa(questionsCount, sIndex) {\n      while (sIndex.indexOf('|') > -1) {\n        sIndex = sIndex.replace(\"|\", \"-\");\n      }\n      //json object as input for \n\n      var jsonSendObj = {\n        \"uid\": this.UID,\n        \"Count\": questionsCount,\n        \"as\": this.answers,\n        \"is\": sIndex\n      };\n\n      this.Encdata5 = this.encryptBlock(JSON.stringify(jsonSendObj), this.sPubKey5, 2048);\n      console.log(this.Encdata5);\n      var hashData7 = CryptoJS.SHA256(this.sPubKey5);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/ValidAns?jsessionid=.\" + this.tokenId + \"&jData=\" + this.Encdata5 + \"&jKey=\" + \"56a8938b460f59a1e13626f94f847681f16d4f528bea892b16440c431db8220f\")\n        .then(response => {\n          this.receiveDate = (new Date()).getTime();\n          this.validansTimeMs = this.receiveDate - this.sendDate;\n          if (response.status == 200) {\n            var encResp = response.data.jEncResp;\n            console.log(encResp);\n            var sPrivateKey = this.gen_private_key()\n            var decResp = this.decryptKey(sPrivateKey, encResp);\n            console.log(sPrivateKey);\n\n            // console.log(decResp);\n            // var sPubKey4 = ''\n            // sPubKey4 = JSON.parse(decResp).sUserToken;\n            // console.log(\"Two factor atuthentication (Pub Key 4) =\" + decResp);\n            // localStorage.setItem(\"pubKey4\", sPubKey4);\n            // userSessionID = (JSON.parse(decResp).UserSessionID);\n            // console.log(userSessionID);\n            // localStorage.setItem(\"userSessionID\", userSessionID);\n            if (JSON.parse(decResp).sPasswordReset === 'Y') {\n              this.changePasswordWithPubKey4();\n            }\n          }\n          else { }\n\n        })\n        .catch(e => {\n          console.log(e);\n        })\n    },\n\n    getHoldings() {\n      var jsonSendObj = {\n        \"uid\": this.UID,\n        \"acctid\": this.UID,\n        \"brkname\": \"ALICEBLUE\",\n        \"s_prdt_ali\": \"CNC:CNC||CO:CO||MIS:MIS||NRML:NRML\",\n        \"symbol\": \"\",\n        \"exch\": \"\",\n        \"Pcode\": \"CNC\"\n      }\n      this.Encdata6 = this.encrypt(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      console.log(this.encryptPublicKey);\n      console.log(this.Encdata6);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/Holding?jsessionid=.\" + this.tokenId + \"&jData=\" + this.Encdata6 + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var holdingList = response.data.Emsg\n            console.log(holdingList);\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            let errorMessage = response.data.Emsg\n            console.log(errorMessage);\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.holdingsTimeMs = this.receiveDate - this.sendDate;\n          console.log(this.holdingsTimeMs);\n        })\n        .catch(e => {\n          console.log(e);\n        })\n    },\n\n    positionBook() {\n      var jsonSendObj = {\n        \"uid\": this.UID,\n        \"actid\": this.UID,\n        \"type\": \"NET\",\n        \"s_prdt_ali\": \"CNC:CNC||CO:CO||MIS:MIS||NRML:NRML\"\n      }\n      var encrptToken = localStorage.getItem('encrptKey')\n      var dataObj = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      console.log(encrptToken);\n      console.log(dataObj);\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/PositionBook?jsessionid=.\" + this.tokenId + \"&jData=\" + dataObj + \"&jKey=\" + hashData,)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var positionList = response.data.result\n            console.log(positionList);\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            let errorMessage = response.data.Emsg\n            console.log(errorMessage);\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.responseTimeMs = this.receiveDate - this.sendDate;\n          console.log(this.responseTimeMs);\n        })\n        .catch(e => {\n          console.log(e);\n        })\n    },\n\n\n    getTradeHistory: function () {\n      var jsonSendObj = {\n        \"uid\": this.UID,\n        // \"accountId\":UID,\n        // \"fromDate\":\"05/04/2019\",\n        // \"toDate\":\"06/04/2019\",\n        // \"exch\":\"NSE\"\n        \"s_prdt_ali\": \"CNC:CNC||CO:CO||MIS:MIS||NRML:NRML\"\n      }\n      //Encrypt the json object with Public key3              \n      var dataObj = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/TradeBook?jsessionid=.\" + this.tokenId + \"&jData=\" + dataObj + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var getTradeBook = response.data.result\n            console.log(getTradeBook);\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            let errorMessage = response.data.Emsg\n            console.log(errorMessage);\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.tradebookTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          console.log(e);\n        })\n\n    },\n\n    fetchOrderBook: function () {\n      var jsonSendObj = {\n        \"s_prdt_ali\": \"MIS:MIS||CNC:CNC||CO:CO||NRML:NRML||BO:BO\",\n        \"uid\": this.UID\n      };\n      //Encrypt the json object with Public key3              \n      var dataObj = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/OrderBook?jsessionid=.\" + this.tokenId + \"&jData=\" + dataObj + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var getOrderBook = response.data.result\n            console.log(getOrderBook);\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            let errorMessage = response.data.Emsg\n            console.log(errorMessage);\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.orderbookTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          console.log(e);\n        })\n\n    },\n    loadScrips() {\n      var jsonSendObj = {\n        \"Exchange\": \"NFO\",\n        \"Instname\": \"FUTSTK\"\n      }\n      //Encrypt the json object with Public key3              \n      // var uid = encryptBlock(JSON.stringify(jsonSendObj),sPubKey4,2048);\n      var dataObj = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/LoadScrips?jsessionid=.\" + this.tokenId + \"&jData=\" + dataObj + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var loadScrips = response.data.result\n            console.log(loadScrips);\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            let errorMessage = response.data.Emsg\n            console.log(errorMessage);\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.loadScripTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          console.log(e);\n        })\n    },\n    getLimits() {\n\n      var jsonSendObj = {\n        \"uid\": this.UID,\n        \"actid\": this.UID,\n        \"segment\": \"ALL\",\n        \"Exchange\": \"\"\n      }\n      //Encrypt the json object with Public key3              \n      var dataObj = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n\n      // $.ajax({\n      //   url: \"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/Limits?jsessionid=.\"+this+\"&jData=\"+dataObj+\"&jKey=\"+hashData,\n      //   dataType: 'text',\n      //   type: 'post',\n      //   crossDomain: true,\n      //   success: function( data ){\n      //     console.log(\"Fund Limits - Common method= \"+data);\n      //   },\n      //   error: function( errorThrown ){\n      //     console.log( \"Error\"+errorThrown );\n      //   }\n      // });\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/Limits?jsessionid=.\" + this.tokenId + \"&jData=\" + dataObj + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var loadScrips = response.data.result\n            console.log(loadScrips);\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            let errorMessage = response.data.Emsg\n            console.log(errorMessage);\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.getLimitTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          console.log(e);\n        })\n    }\n  }\n};\n</script>\n\n<style>\n.position-relative {\n  position: relative;\n}\n\n.position-absolute {\n  position: absolute;\n}\n\n.right-0 {\n  right: 24px;\n  top: 20%;\n}\n\nv-icon:disabled {\n  cursor: not-allowed !important;\n}\n</style>"]}]}