{"remainingRequest":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/src/views/apiKey.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/src/views/apiKey.vue","mtime":1669366695940},{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5wb3NpdGlvbi1yZWxhdGl2ZSB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwp9CgoucG9zaXRpb24tYWJzb2x1dGUgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKfQoKLnJpZ2h0LTAgewogIHJpZ2h0OiAyNHB4OwogIHRvcDogMjAlOwp9Cgoudi1pY29uW2Rpc2FibGVkXSB7CiAgY3Vyc29yOiBub3QtYWxsb3dlZCAhaW1wb3J0YW50Owp9Cg=="},{"version":3,"sources":["apiKey.vue"],"names":[],"mappingssgFA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"apiKey.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <div class=\"d-flex align-center px-4 py-2 mt-2\">\n      <div class=\"w-100\">\n        <div class=\"font-weight-bold primaryColor\">Api Key\n          <v-progress-circular class=\"ml-2\" indeterminate v-if=\"loading\" size=\"18\" :width=\"2\" color=\"black\">\n          </v-progress-circular>\n        </div>\n        <div class=\"pt-3 d-flex justify-space-between\">\n          <div>\n            <v-slide-group v-model=\"tabSelect\" mandatory>\n              <v-slide-item v-for=\"n in tabs\" :key=\"n\" v-slot=\"{ active, toggle }\" :value=\"n\">\n                <span @click=\"date = null; userId1 = ''\">\n                  <v-btn :title=\"n\" depressed height=\"26\" class=\"fsize12 text-capitalize mr-2\" @click=\"toggle\"\n                    :color=\"active ? 'primary' : 'grey lighten-3'\">{{ n }}</v-btn>\n                </span>\n              </v-slide-item>\n            </v-slide-group>\n          </div>\n        </div>\n      </div>\n    </div>\n    <v-divider class=\"mx-4\"></v-divider>\n    <v-form ref=\"forms\" v-model=\"formValid\" @submit.prevent=\"getApiKeyDetails('get')\">\n      <v-card class=\"ma-4 cardBoxShadow rounded-lg\" v-if=\"tabSelect == 'API Key Details'\">\n        <v-row no-gutters class=\"px-4 py-10\">\n          <v-col cols=\"12\" sm=\"12\" md=\"6\" lg=\"3\">\n            <div class=\"fsize14 font-weight-bold primaryColor pb-4\">API Key Details</div>\n          </v-col>\n          <v-col cols=\"12\" sm=\"12\" md=\"6\" lg=\"5\">\n            <div class=\"primaryColor fsize14 pb-1\">*UserId</div>\n            <v-text-field clearable class=\"apiKeyInput\" placeholder=\"Enter UserId\"\n              @input=\"userId = userId ? userId.toUpperCase() : ''\" v-model=\"userId\" outlined dense :rules=\"userIdRules\">\n            </v-text-field>\n          </v-col>\n          <v-col cols=\"12\" sm=\"12\" md=\"6\" lg=\"4\">\n          </v-col>\n        </v-row>\n        <div class=\"pa-10 font-weight-bold\" v-if=\"apiKeyDetails\">\n          <div class=\"d-flex mb-3\" style=\"min-width:350px;overflow:auto\">\n            <div class=\"primaryColor fsize14\">User Id : &nbsp;</div>\n            <div class=\"secondaryColor fsize14\">{{ apiKeyDetails.user_id }}</div>\n          </div>\n          <div class=\"d-flex mb-3\" style=\"min-width:350px;overflow:auto\">\n            <div class=\"primaryColor fsize14\">API Key : &nbsp;</div>\n            <div class=\"secondaryColor fsize14\"> {{ apiKeyDetails.api_key ? apiKeyDetails.api_key : '' }}</div>\n          </div>\n          <div class=\"d-flex mb-3\" style=\"min-width:350px;overflow:auto\">\n            <div class=\"primaryColor fsize14\">Created On : &nbsp;</div>\n            <div class=\"secondaryColor fsize14\"> {{ apiKeyDetails.created_on ? `${getDateString(new\n                Date(apiKeyDetails.created_on.split(' ')[0]), \"d-M-y\")} ${apiKeyDetails.created_on.split(' ')[1]}` : ''\n            }}\n            </div>\n          </div>\n          <div class=\"d-flex mb-3\" style=\"min-width:350px;overflow:auto\">\n            <div class=\"primaryColor fsize14\">Expiry Date : &nbsp;</div>\n            <div class=\"\">\n              <div class=\"secondaryColor fsize14\"> {{ apiKeyDetails.expiry_date ? getDateString(new\n                  Date(apiKeyDetails.expiry_date.split(' ')[0]), \"d-M-y\") : ''\n              }}</div>\n            </div>\n          </div>\n          <div class=\"d-flex py-4\">\n            <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n              <v-menu v-model=\"dateMenu\" :close-on-content-click=\"false\" transition=\"scale-transition\" offset-y\n                max-width=\"290px\" min-width=\"auto\">\n                <template v-slot:activator=\"{ on, attrs }\">\n                  <v-text-field @click:append=\"dateMenu = true\" class=\"apiKeyInput\" v-model=\"computedDateFormatted\"\n                    outlined persistent-hint :menu-props=\"{ bottom: true, offsetY: true }\" :rules=\"dateRules\"\n                    placeholder=\"Select the Date\" append-icon=\"mdi-calendar\" readonly dense v-bind=\"attrs\" v-on=\"on\">\n                  </v-text-field>\n                </template>\n                <v-date-picker :min=\"new Date().toISOString().substr(0, 10)\" v-model=\"date\" :show-current=\"true\"\n                  no-title @input=\"dateMenu = false\"></v-date-picker>\n              </v-menu>\n            </v-form>\n            <div class=\"mx-5\">\n              <v-btn height=\"40\" :loading=\"loading\" depressed @click=\"updateApiKey()\" class=\"text-capitalize fsize12\">\n                Update Date</v-btn>\n            </div>\n          </div>\n        </div>\n      </v-card>\n\n      <v-card class=\"ma-3 cardBoxShadow rounded-lg\" v-if=\"tabSelect == 'Expiry List'\">\n        <v-form ref=\"form\" v-model=\"valid\" @submit.prevent=\"getExpiryList()\" lazy-validation>\n          <div class=\"d-flex align-center\">\n            <div class=\"pa-4\">\n              <div class=\"pb-1\">*From Date</div>\n              <v-menu v-model=\"dateMenu1\" :close-on-content-click=\"false\" transition=\"scale-transition\" offset-y\n                max-width=\"290px\" min-width=\"auto\">\n                <template v-slot:activator=\"{ on, attrs }\">\n                  <v-text-field @click:append=\"dateMenu1 = true\" class=\"apiKeyInput\" v-model=\"computedDateFormatted1\"\n                    outlined persistent-hint :menu-props=\"{ bottom: true, offsetY: true }\" :rules=\"fromDateRules\"\n                    placeholder=\"Select the From Date\" append-icon=\"mdi-calendar\" readonly dense v-bind=\"attrs\"\n                    v-on=\"on\"></v-text-field>\n                </template>\n                <v-date-picker v-model=\"fromDate\" :show-current=\"true\" no-title @input=\"dateMenu1 = false\">\n                </v-date-picker>\n              </v-menu>\n            </div>\n\n            <div class=\"pa-4\">\n              <div class=\"pb-1\">*To Date</div>\n              <v-menu v-model=\"dateMenu2\" :close-on-content-click=\"false\" transition=\"scale-transition\" offset-y\n                max-width=\"290px\" min-width=\"auto\">\n                <template v-slot:activator=\"{ on, attrs }\">\n                  <v-text-field @click:append=\"dateMenu2 = true\" class=\"apiKeyInput\" v-model=\"computedDateFormatted2\"\n                    outlined persistent-hint :menu-props=\"{ bottom: true, offsetY: true }\" :rules=\"toDateRules\"\n                    placeholder=\"Select the To Date\" append-icon=\"mdi-calendar\" readonly dense v-bind=\"attrs\" v-on=\"on\">\n                  </v-text-field>\n                </template>\n                <v-date-picker v-model=\"toDate\" :show-current=\"true\" no-title @input=\"dateMenu2 = false\">\n                </v-date-picker>\n              </v-menu>\n            </div>\n            <v-btn type=\"submit\" height=\"40\" depressed color=\"primary\" class=\"text-capitalize fsize14\">Submit</v-btn>\n          </div>\n        </v-form>\n        <v-simple-table v-if=\"ApiKeyExpiryList.length\">\n          <thead>\n            <tr>\n              <th>User Id</th>\n              <th>Expiry Date</th>\n              <th>created On</th>\n              <th>API Key</th>\n              <!-- <th class=\"text-center\">Action</th> -->\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(i, idex) in ApiKeyExpiryList\" :key=\"idex\" @mouseleave=\"i.showEdit = false\"\n              @mouseover=\"i.showEdit = true\">\n              <td>{{ i.user_id }}</td>\n              <td>{{ getDateString(new Date(i.expiry_date.split(' ')[0]), \"d-M-y\") }}</td>\n              <td>{{ getDateString(new Date(i.created_on.split(' ')[0]), \"d-M-y\") }}</td>\n              <td class=\"position-relative\">\n                {{ i.api_key }}\n                <div v-if=\"i.showEdit\" class=\"position-absolute right-0\">\n                  <v-btn depressed color=\"grey\" width=\"fit-content\" height=\"26\"\n                    class=\"fsize12 text-capitalize white--text\" @click=\"openDailog(i.user_id)\">Update Expiry</v-btn>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </v-simple-table>\n\n        <div v-else class=\"d-flex align-center justify-center min-height-100\">\n          <div class=\"primaryColor fsize20\">No Data Found</div>\n        </div>\n\n        <v-dialog v-model=\"logoutDialog\" width=\"390\" overlay-color=\"white\">\n          <v-card class=\"pa-5 cardBoxShadow rounded-lg\" height=\"220\">\n            <div class=\"secondaryColor fsize14 d-flex justify-space-between\">\n              <div class=\"fsize14 font-weight-bold\">Update Expiry Date</div>\n              <div>\n                <v-icon @click=\"logoutDialog = false\" color=\"light-blue\">mdi-close-circle-outline</v-icon>\n              </div>\n            </div>\n            <div class=\"mt-4\">\n              <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                <div class=\"fsize14 pb-1\">Date</div>\n                <v-menu v-model=\"dateMenu3\" :close-on-content-click=\"false\" transition=\"scale-transition\" offset-y\n                  max-width=\"290px\" min-width=\"auto\">\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-text-field @click:append=\"dateMenu3 = true\" class=\"apiKeyInput\" v-model=\"computedDateFormatted3\"\n                      outlined persistent-hint :menu-props=\"{ bottom: true, offsetY: true }\" :rules=\"dateRules\"\n                      placeholder=\"Select the Date\" append-icon=\"mdi-calendar\" readonly dense v-bind=\"attrs\" v-on=\"on\">\n                    </v-text-field>\n                  </template>\n                  <v-date-picker v-model=\"updateExpiryDate\" :show-current=\"true\" no-title @input=\"dateMenu3 = false\">\n                  </v-date-picker>\n                </v-menu>\n                <div class=\"d-flex justify-end pt-3\">\n                  <v-btn height=\"32\" width=\"86\" @click=\"updateDate()\" depressed outlined text color=\"light-blue\"\n                    class=\"text-capitalize white--text fsize12 mr-2\">\n                    Confirm\n                  </v-btn>\n                  <v-btn height=\"32\" width=\"86\" @click=\"logoutDialog = false\" depressed color=\"black\" outlined text\n                    class=\"text-capitalize fsize12\">\n                    Cancel\n                  </v-btn>\n                </div>\n              </v-form>\n            </div>\n          </v-card>\n        </v-dialog>\n      </v-card>\n\n\n      <div class=\"mt-5 pa-4 d-flex justify-end\" v-if=\"tabSelect === 'API Key Details'\">\n        <v-btn height=\"40\" width=\"96\" depressed outlined color=\"grey--text\" class=\" mr-3 text-capitalize\">Cancel</v-btn>\n        <v-btn type=\"submit\" :loading=\"loading\" height=\"40\" width=\"96\" depressed color=\"primary\"\n          class=\"mr-3 text-capitalize\">Submit</v-btn>\n      </div>\n\n    </v-form>\n    <v-card class=\"ma-4 cardBoxShadow rounded-lg\" v-if=\"tabSelect == 'API Calls'\">\n\n      <v-form ref=\"form2\" v-model=\"loginForm\" @submit.prevent=\"submitLogin()\">\n        <div class=\"d-flex ml-4 flex-wrap\">\n          <div class=\"mt-4\">\n            <div class=\"fsize14 font-weight-bold primaryColor pb-4\">User Id</div>\n            <v-text-field class=\"apiKeyInput\" style=\"width:270px\" placeholder=\"Enter UserId\" v-model=\"UID\" outlined\n              dense :rules=\"userIDRules\">\n            </v-text-field>\n          </div>\n          <div class=\"mt-4 ml-3\">\n            <div class=\"fsize14 font-weight-bold primaryColor pb-4\">Password</div>\n            <v-text-field class=\"apiKeyInput\" style=\"width:270px\" placeholder=\"Enter password\" v-model=\"uPASS\" outlined\n              dense :rules=\"userPassRules\">\n            </v-text-field>\n          </div>\n          <div class=\"mt-4 ml-3\">\n            <div class=\"fsize14 font-weight-bold primaryColor pb-4\">2FA</div>\n            <v-text-field class=\"apiKeyInput\" style=\"width:270px\" placeholder=\"Enter answer\" v-model=\"answers\" outlined\n              dense :rules=\"user2FaRules\">\n            </v-text-field>\n          </div>\n          <div class=\"mt-4 ml-3\">\n            <div class=\"fsize14 font-weight-bold primaryColor pb-9\"></div>\n            <v-btn type=\"submit\" height=\"40\" depressed color=\"primary\" :disabled=!loginForm\n              class=\"text-capitalize fsize14\">Submit</v-btn>\n          </div>\n\n        </div>\n        <!-- <v-form ref=\"form\" v-model=\"valid\" @submit.prevent=\"getExpiryList()\" lazy-validation>\n  <div class=\"d-flex align-center\">\n    <div class=\"pa-4\">\n      <div class=\"pb-1\">*From Date</div>\n      <v-menu v-model=\"dateMenu1\" :close-on-content-click=\"false\" transition=\"scale-transition\" offset-y\n        max-width=\"290px\" min-width=\"auto\">\n        <template v-slot:activator=\"{ on, attrs }\">\n          <v-text-field @click:append=\"dateMenu1 = true\" class=\"apiKeyInput\" v-model=\"computedDateFormatted1\"\n            outlined persistent-hint :menu-props=\"{ bottom: true, offsetY: true }\" :rules=\"fromDateRules\"\n            placeholder=\"Select the From Date\" append-icon=\"mdi-calendar\" readonly dense v-bind=\"attrs\"\n            v-on=\"on\"></v-text-field>\n        </template>\n        <v-date-picker v-model=\"fromDate\" :show-current=\"true\" no-title @input=\"dateMenu1 = false\">\n        </v-date-picker>\n      </v-menu>\n    </div>\n\n    <div class=\"pa-4\">\n      <div class=\"pb-1\">*To Date</div>\n      <v-menu v-model=\"dateMenu2\" :close-on-content-click=\"false\" transition=\"scale-transition\" offset-y\n        max-width=\"290px\" min-width=\"auto\">\n        <template v-slot:activator=\"{ on, attrs }\">\n          <v-text-field @click:append=\"dateMenu2 = true\" class=\"apiKeyInput\" v-model=\"computedDateFormatted2\"\n            outlined persistent-hint :menu-props=\"{ bottom: true, offsetY: true }\" :rules=\"toDateRules\"\n            placeholder=\"Select the To Date\" append-icon=\"mdi-calendar\" readonly dense v-bind=\"attrs\" v-on=\"on\">\n          </v-text-field>\n        </template>\n        <v-date-picker v-model=\"toDate\" :show-current=\"true\" no-title @input=\"dateMenu2 = false\">\n        </v-date-picker>\n      </v-menu>\n    </div>\n    <v-btn type=\"submit\" height=\"40\" depressed color=\"primary\" class=\"text-capitalize fsize14\">Submit</v-btn>\n  </div>\n</v-form> -->\n        <v-simple-table>\n          <thead>\n            <tr>\n              <th>Scrip Names</th>\n              <th>Response Time</th>\n              <th>Status</th>\n              <th>Action</th>\n              <!-- <th class=\"text-center\">Action</th> -->\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>Login</td>\n              <td>{{ preAuthenticateTimems ? preAuthenticateTimems : 'NA' }}ms</td>\n              <td @click=\"info('1')\">\n                <v-icon :disabled=\"this.viewResponse\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <span>NA</span>\n              </td>\n            </tr>\n            <tr>\n              <td>Password</td>\n              <td>{{ passwordTimeMs ? passwordTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.viewPasswordResponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <span>NA</span>\n              </td>\n            </tr>\n            <tr>\n              <td>Security Question</td>\n              <td>{{ validansTimeMs ? validansTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.viewsecurityResponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <span>NA</span>\n              </td>\n            </tr>\n            <tr>\n              <td>Holdings</td>\n              <td>{{ holdingsTimeMs ? holdingsTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.holdingResponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.holdingbtn @click=\"getHoldings()\">\n                  SUBMIT</v-btn>\n              </td>\n            </tr>\n            <tr>\n              <td>Positions</td>\n              <td>{{ responseTimeMs ? responseTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.positionResponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.positionbtn @click=\"positionBook()\">\n                  SUBMIT</v-btn>\n              </td>\n            </tr>\n            <tr>\n              <td>Trade-Book</td>\n              <td>{{ tradebookTimeMs ? tradebookTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.tradebookResponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.gettradebtn\n                  @click=\"getTradeHistory()\">\n                  SUBMIT</v-btn>\n              </td>\n            </tr>\n            <tr>\n              <td>Order-Book</td>\n              <td>{{ orderbookTimeMs ? orderbookTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.orderbookResponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.orderbtn @click=\"fetchOrderBook()\">\n                  SUBMIT</v-btn>\n              </td>\n            </tr>\n            <tr>\n              <td>Load Scrips</td>\n              <td>{{ loadScripTimeMs ? loadScripTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.loadscripResponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.scripbtn @click=\"loadScrips()\">\n                  SUBMIT\n                </v-btn>\n              </td>\n            </tr>\n            <tr>\n              <td>Get Limits</td>\n              <td>{{ getLimitTimeMs ? getLimitTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.getlimitResponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.limitbtn @click=\"getLimits()\">\n                  SUBMIT\n                </v-btn>\n              </td>\n            </tr>\n            <tr>\n              <td>Load Instrument</td>\n              <td>{{ getLoadInstrumentTimeMs ? getLoadInstrumentTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.loadinstrumentResponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.instrumentbtn\n                  @click=\"loadInstrument()\">\n                  SUBMIT\n                </v-btn>\n              </td>\n            </tr>\n            <tr>\n              <td>Load Sublimits</td>\n              <td>{{ getsubLimitTimeMs ? getsubLimitTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.loadsublimitsResponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.sublimitbtn\n                  @click=\"getRMSSubLimits()\">SUBMIT\n                </v-btn>\n              </td>\n            </tr>\n            <tr>\n              <td>Alert History</td>\n              <td>{{ alertHistoryTimeMs ? alertHistoryTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.alerthistoryResponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.alertHistorybtn\n                  @click=\"getAlertHistory()\">SUBMIT\n                </v-btn>\n              </td>\n            </tr>\n            <!-- <tr>\n        <td>Index Details</td>\n        <td>{{ getindexdetailTimeMs ? getindexdetailTimeMs : 'NA' }}ms</td>\n        <td>NA</td>\n        <td>\n          <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.limitbtn\n            @click=\"getIndexDetails()\">SUBMIT\n          </v-btn>\n        </td>\n      </tr> -->\n            <tr>\n              <td>Multi-scrips Details</td>\n              <td>{{ multiscripDataTimeMs ? multiscripDataTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.multiScripResponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.multiScripbtn\n                  @click=\"getMultiScripsData()\">SUBMIT\n                </v-btn>\n              </td>\n            </tr>\n            <tr>\n              <td>Index Details</td>\n              <td>{{ indexDataTimeMs ? indexDataTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.indexdetailResponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.indexDetailbtn\n                  @click=\"getIndexData()\">SUBMIT\n                </v-btn>\n              </td>\n            </tr>\n            <tr>\n              <td>Top Gainers & Loser Info</td>\n              <td>{{ TopnTimeMs ? TopnTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.topnviewResponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.topnbtn @click=\"getGainerLosers()\">\n                  SUBMIT\n                </v-btn>\n              </td>\n            </tr>\n            <tr>\n              <td>Margin-Details</td>\n              <td>{{ marginTimeMs ? marginTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.margindetailResponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.marginDetailbtn @click=\"getMargin()\">\n                  SUBMIT\n                </v-btn>\n              </td>\n            </tr>\n            <tr>\n              <td>Account-Info</td>\n              <td>{{ accountinfoTimeMs ? accountinfoTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.accountResponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.accountbtn @click=\"accountInfo()\">\n                  SUBMIT\n                </v-btn>\n              </td>\n            </tr>\n            <tr>\n              <td>Place-Order</td>\n              <td>{{ placeorderTimeMs ? placeorderTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.placeOrderResponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.placeOrderbtn @click=\"placeOrder()\">\n                  SUBMIT\n                </v-btn>\n              </td>\n            </tr>\n            <tr>\n              <td>Modify-Order</td>\n              <td>{{ modifyorderTimeMs ? modifyorderTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.modifyResponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.modifyOrderbtn\n                  @click=\"modifyOrder()\">SUBMIT\n                </v-btn>\n              </td>\n            </tr>\n            <tr>\n              <td>Market-Status</td>\n              <td>{{ marketStatusTimeMs ? marketStatusTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.marketstatusResponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.marketStatusbtn\n                  @click=\"marketStatus()\">SUBMIT\n                </v-btn>\n              </td>\n            </tr>\n            <tr>\n              <td>Load-Options</td>\n              <td>{{ marketStatusTimeMs ? marketStatusTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.loadOptionResponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.loadOptionbtn @click=\"loadOption()\">\n                  SUBMIT\n                </v-btn>\n              </td>\n            </tr>\n            <tr>\n              <td>Order-History</td>\n              <td>{{ orderHistoryTimeMs ? orderHistoryTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.orderHistoryResponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.orderHistorybtn\n                  @click=\"orderHistory()\">SUBMIT\n                </v-btn>\n              </td>\n            </tr>\n            <!-- <tr>\n        <td>Chart-Data</td>\n        <td>{{ chartDataTimeMs ? chartDataTimeMs : 'NA' }}ms</td>\n        <td>NA</td>\n        <td>\n          <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.limitbtn\n            @click=\"getChartData()\">SUBMIT\n          </v-btn>\n        </td>\n      </tr> -->\n            <tr>\n              <td>Search Scrips</td>\n              <td>{{ searchScripsTimeMs ? searchScripsTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.searchscripResponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.searchScripbtn\n                  @click=\"scripSearch()\">SUBMIT\n                </v-btn>\n              </td>\n            </tr>\n            <tr>\n              <td>Watch List</td>\n              <td>{{ watchListTimeMs ? watchListTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.watchListResponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.watchListbtn\n                  @click=\"getMarketWatchList()\">SUBMIT\n                </v-btn>\n              </td>\n            </tr>\n            <tr>\n              <td>Add Scrips</td>\n              <td>{{ addScripsTimeMs ? addScripsTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.addscripResponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.addScripbtn @click=\"addScripToMW()\">\n                  SUBMIT\n                </v-btn>\n              </td>\n            </tr>\n            <tr>\n              <td>Delete Scrips</td>\n              <td>{{ deleteScripsTimeMs ? deleteScripsTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.deletescripResponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.deleteScripbtn\n                  @click=\"deleteScrips()\">SUBMIT\n                </v-btn>\n              </td>\n            </tr>\n            <tr>\n              <td>Basket Orders</td>\n              <td>{{ basketOrderTimeMs ? basketOrderTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.basketOrderResponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.basketOrderbtn\n                  @click=\"basketOrder()\">SUBMIT\n                </v-btn>\n              </td>\n            </tr>\n            <tr>\n              <td>Bracket Order</td>\n              <td>{{ bracketOrderTimeMs ? bracketOrderTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.bracketResponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.bracketOrderbtn\n                  @click=\"bracketOrder()\">SUBMIT\n                </v-btn>\n              </td>\n            </tr>\n            <tr>\n              <td>Cover Orders</td>\n              <td>{{ coverOrderTimeMs ? coverOrderTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.coverorderResponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.coverOrderBtn @click=\"coverOrder()\">\n                  SUBMIT\n                </v-btn>\n              </td>\n            </tr>\n            <tr>\n              <td>Load ExpiryDates</td>\n              <td>{{ loadExpiryTimeMs ? loadExpiryTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.loadexpiryResponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.loadExpirybtn\n                  @click=\"loadExpiryDates()\">SUBMIT\n                </v-btn>\n              </td>\n            </tr>\n            <tr>\n              <td>Option-Chain</td>\n              <td>{{ OptionChainTimeMs ? OptionChainTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.optionchainResponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.optionChainbtn\n                  @click=\"optionChainLoader()\">SUBMIT\n                </v-btn>\n              </td>\n            </tr>\n            <tr>\n              <td>Multiple-Scrips</td>\n              <td>{{ multipleScripsTimeMs ? multipleScripsTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.multiplescripReponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.multipleScripbtn\n                  @click=\"addMultipleScripToMW()\">SUBMIT\n                </v-btn>\n              </td>\n            </tr>\n            <tr>\n              <td>Categories</td>\n              <td>{{ categoryTimeMs ? categoryTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.categoryResponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.categorybtn @click=\"getCategories()\">\n                  SUBMIT\n                </v-btn>\n              </td>\n            </tr>\n            <tr>\n              <td>Quotes</td>\n              <td>{{ quotesTimeMs ? quotesTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.qoutesResponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.quotesbtn @click=\"showQuote()\">SUBMIT\n                </v-btn>\n              </td>\n            </tr>\n            <tr>\n              <td>Sort Maket-Watch</td>\n              <td>{{ sortMarketwatchTimeMs ? sortMarketwatchTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.sortMarketwatcResponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.sortMwbtn @click=\"sortMarketWatch()\">\n                  SUBMIT\n                </v-btn>\n              </td>\n            </tr>\n            <tr>\n              <td>Load Retention-Type</td>\n              <td>{{ retentionTypeTimeMs ? retentionTypeTimeMs : 'NA' }}ms</td>\n              <td>\n                <v-icon :disabled=\"this.loadretentionResponse\" @click=\"info('2')\">mdi-eye</v-icon>\n              </td>\n              <td>\n                <v-btn class=\"my-4\" depressed small color=\"primary\" :disabled=this.sortMwbtn\n                  @click=\"loadRetentionType()\">SUBMIT\n                </v-btn>\n              </td>\n            </tr>\n          </tbody>\n        </v-simple-table>\n      </v-form>\n    </v-card>\n    <v-dialog v-model=\"dialog\" persistent max-width=\"600\">\n      <template v-slot:activator=\"{}\">\n      </template>\n      <v-card>\n        <v-card-title class=\"text-h5\">\n          Response\n        </v-card-title>\n        <v-card-text>{{ this.responseData }}</v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"red darken-1\" text @click=\"dialog = false\">\n            CLOSE\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n\n <!-- <script data-main=\"js/config\" src=\"js/lib/require.js\" ></script>  -->\n<script>\nimport { mapGetters } from \"vuex\";\nimport commonFunc from \"../mixins/commonFunctions\";\nimport axios from \"axios\";\nimport CryptoJS from 'crypto-js'\n// import JSEncrypt from 'jsencrypt/bin/jsencrypt.min.js'\nimport JSEncrypt from 'jsencrypt/lib/index.js';\n\nrequire('crypto-js')\nexport default {\n  name: \"apiKey\",\n  mixins: [commonFunc],\n\n  data: () => ({\n    tabs: [\"API Key Details\", \"Expiry List\", \"API Calls\"],\n    tabSelect: \"Reset\",\n    userId: \"\",\n    userId1: \"\",\n    date: null,\n    fromDate: null,\n    toDate: null,\n    updateExpiryDate: null,\n    dateMenu: false,\n    dateMenu1: false,\n    dateMenu2: false,\n    dateMenu3: false,\n    viewResponse: true,\n    orderbookResponse: true,\n    holdingResponse: true,\n    loadinstrumentResponse: true,\n    viewResponse2: true,\n    viewPasswordResponse: true,\n    searchscripResponse: true,\n    orderHistoryResponse: true,\n    loadretentionResponse: true,\n    viewsecurityResponse: true,\n    topnviewResponse: true,\n    margindetailResponse: true,\n    accountResponse: true,\n    basketOrderResponse: true,\n    bracketResponse: true,\n    coverorderResponse: true,\n    loadexpiryResponse: true,\n    placeOrderResponse: true,\n    sortMarketwatcResponse: true,\n    qoutesResponse: true,\n    categoryResponse: true,\n    holdingbtn: true,\n    scripbtn: true,\n    gettradebtn: true,\n    positionbtn: true,\n    orderbtn: true,\n    limitbtn: true,\n    instrumentbtn: true,\n    alertHistorybtn: true,\n    multiScripbtn: true,\n    marginDetailbtn: true,\n    accountbtn: true,\n    modifyOrderbtn: true,\n    indexDetailbtn: true,\n    marketStatusbtn: true,\n    placeOrderbtn: true,\n    quotesbtn: true,\n    topnbtn: true,\n    watchListResponse: true,\n    addscripResponse: true,\n    deletescripResponse: true,\n    loadOptionResponse: true,\n    sublimitbtn: true,\n    loadOptionbtn: true,\n    orderHistorybtn: true,\n    searchScripbtn: true,\n    watchListbtn: true,\n    addScripbtn: true,\n    deleteScripbtn: true,\n    bracketOrderbtn: true,\n    modifyResponse: true,\n    marketstatusResponse: true,\n    coverOrderBtn: true,\n    basketOrderbtn: true,\n    optionChainbtn: true,\n    positionResponse: true,\n    tradebookResponse: true,\n    loadscripResponse: true,\n    getlimitResponse: true,\n    loadExpirybtn: true,\n    alerthistoryResponse: true,\n    loadsublimitsResponse: true,\n    multiScripResponse: true,\n    multipleScripbtn: true,\n    categorybtn: true,\n    sortMwbtn: true,\n    dialog: false,\n    userIdRules: [(v) => !!v || \"UserId is required\"],\n    userId1Rules: [(v) => !!v || \"UserId is required\"],\n    dateRules: [(v) => !!v || \"Date is required\"],\n    fromDateRules: [(v) => !!v || \"From Date is required\"],\n    toDateRules: [(v) => !!v || \"To Date is required\"],\n    valid: true,\n    loginForm: true,\n    formValid: true,\n    logoutDialog: false,\n    indexdetailResponse: true,\n    multiplescripReponse: true,\n    optionchainResponse: true,\n    expiryDate: \"\",\n    currentUserId: \"\",\n    showUpdate: false,\n    userIdRules: [\n      (v) => !!v || \"User Id is required\",\n      (v) =>\n        (v && v.length >= 2) || \"User Id must be greater than 2 characters\",\n    ],\n    userIDRules: [\n      (v) => !!v || \"User Id is required\",\n\n    ],\n    userPassRules: [\n      (v) => !!v || \"Password is required\",\n\n    ],\n    user2FaRules: [\n      (v) => !!v || \"2FA is required\",\n\n    ],\n    sPubKey1: \"\",\n    secret: \"123#$%\",\n    jSessionId: \"\",\n    encryptPublicKey: \"\",\n    sPubKey3: \"\",\n    sPubKey5: \"\",\n    publicKey1: '',\n    encryptKEY: '',\n    privateKey1: '',\n    receiveDate: '',\n    sendDate: '',\n    holdingsTimeMs: '',\n    responseTimeMs: '',\n    passwordTimeMs: '',\n    getLoadInstrumentTimeMs: '',\n    addScripsTimeMs: '',\n    watchListTimeMs: '',\n    categoryTimeMs: '',\n    chartDataTimeMs: '',\n    basketOrderTimeMs: '',\n    preAuthenticateTimems: '',\n    retentionTypeTimeMs: '',\n    quotesTimeMs: '',\n    getLimitTimeMs: '',\n    OptionChainTimeMs: '',\n    deleteMWTimeMs: '',\n    scripLoadTimeMs: '',\n    loadScripTimeMs: '',\n    alertHistoryTimeMs: '',\n    getindexdetailTimeMs: '',\n    placeorderTimeMs: '',\n    coverOrderTimeMs: '',\n    marketWatchscripTimeMs: '',\n    loadExpiryTimeMs: '',\n    deleteScripsTimeMs: '',\n    indexDataTimeMs: '',\n    validansTimeMs: '',\n    marginTimeMs: '',\n    tradebookTimeMs: '',\n    orderbookTimeMs: '',\n    getsubLimitTimeMs: '',\n    multiscripDataTimeMs: '',\n    marketStatusTimeMs: '',\n    TopnTimeMs: '',\n    accountinfoTimeMs: '',\n    bracketOrderTimeMs: '',\n    orderHistoryTimeMs: '',\n    searchScripsTimeMs: '',\n    modifyorderTimeMs: '',\n    loadOptionTimeMs: '',\n    multipleScripsTimeMs: '',\n    sortMarketwatchTimeMs: '',\n    pubKey: '',\n    userSessionID: '',\n    passwordResponse: '',\n    Encdata3: '',\n    Encdata4: '',\n    Encdata5: '',\n    Encdata6: '',\n    sampleKey: '',\n    sPrivateKey: '',\n    responseData2: '',\n    tokenId: '',\n    UID: \"\",\n    uPASS: \"\",\n    answers: \"\",\n    setAns: \"|1\",\n    responseData: ''\n  }),\n\n  computed: {\n    ...mapGetters(\"apiKey\", {\n      apiKeyDetails: \"getApiKeyDetails\",\n      ApiKeyExpiryList: \"getApiKeyExpiryList\",\n    }),\n    ...mapGetters({\n      loading: \"getLoader\",\n    }),\n    computedDateFormatted: {\n      get() {\n        return this.formatDate(this.date);\n      },\n      set() { },\n    },\n    computedDateFormatted1: {\n      get() {\n        return this.formatDate(this.fromDate);\n      },\n      set() { },\n    },\n    computedDateFormatted2: {\n      get() {\n        return this.formatDate(this.toDate);\n      },\n      set() { },\n    },\n    computedDateFormatted3: {\n      get() {\n        return this.formatDate(this.updateExpiryDate);\n      },\n      set() { },\n    },\n  },\n\n  watch: {\n    tabSelect(tab) {\n      this.$store.commit(\"apiKey/SET_API_KEY_DETAILS\", null);\n      this.fromDate = new Date().toISOString().substr(0, 10);\n      this.toDate = new Date(Date.now() + 14 * 24 * 60 * 60 * 1000)\n        .toISOString()\n        .substr(0, 10);\n      tab == \"Expiry List\" ? this.getExpiryList(\"initial\") : \"\";\n    },\n  },\n\n  created() {\n\n  },\n\n  mounted() {\n    this.getInitialKey()\n    this.tokenId = localStorage.getItem('tomcatCount')\n\n\n\n  },\n\n  methods: {\n\n\n    info(val) {\n      this.dialog = true\n      // this.viewResponse = false\n      if (val == 1) {\n        if (this.viewResponse == true) {\n          this.dialog = false;\n        }\n        this.responseData = this.sPubKey5\n        // console.log(this.responseData);\n      }\n      else if (val == 2) {\n\n        this.dialog = true\n        this.responseData = this.passwordResponse\n        // console.log(this.responseData);\n        // this.viewResponse = false\n      }\n    },\n\n    submitLogin() {\n      this.preAuthenticateKey()\n    },\n\n\n    async getApiKeyDetails(type) {\n      if (this.$refs.forms.validate()) {\n        let formData = new FormData();\n        formData.append(\n          \"userId\",\n          type == \"update\" ? this.apiKeyDetails.user_id : this.userId\n        );\n        await this.$store.dispatch(\"apiKey/getApiKeyDetails\", {\n          data: formData,\n          type: type,\n        });\n      }\n    },\n    async updateApiKey() {\n      let formData = new FormData();\n      formData.append(\"userId\", this.apiKeyDetails.user_id);\n      formData.append(\"expiryDate\", this.date);\n      await this.$store.dispatch(\"apiKey/updateApiKey\", formData);\n      this.resetUpdateApiKeyForm();\n      this.getApiKeyDetails(\"update\");\n    },\n\n    resetUpdateApiKeyForm() {\n      this.userId1 = \"\";\n      this.date = null;\n      this.$refs.form.resetValidation();\n    },\n    formatDate(date) {\n      if (!date) return null;\n      const [year, month, day] = date.split(\"-\");\n      return `${day}/${month}/${year}`;\n    },\n    getExpiryList(val) {\n      if (val == \"initial\") {\n        let fd = new FormData();\n        fd.append(\"from_date\", this.fromDate);\n        fd.append(\"to_date\", this.toDate);\n        this.$store.dispatch(\"apiKey/getApiExpiryList\", fd);\n      } else if (this.$refs.form.validate()) {\n        let fd = new FormData();\n        fd.append(\"from_date\", this.fromDate);\n        fd.append(\"to_date\", this.toDate);\n        this.$store.dispatch(\"apiKey/getApiExpiryList\", fd);\n      }\n    },\n\n    formatDate(date) {\n      if (!date) return null;\n      const [year, month, day] = date.split(\"-\");\n      return `${day}/${month}/${year}`;\n    },\n\n    openDailog(val) {\n      this.$refs.form.reset();\n      if (val) {\n        this.logoutDialog = true;\n      }\n      this.currentUserId = val;\n    },\n\n    async updateDate() {\n      if (this.$refs.form.validate()) {\n        let formData = new FormData();\n        formData.append(\"expiryDate\", this.updateExpiryDate);\n        formData.append(\"userId\", this.currentUserId);\n        await this.$store.dispatch(\"apiKey/updateApiKey\", formData);\n        this.getExpiryList();\n        this.resetUpdateApiKeyForm();\n        this.logoutDialog = false;\n      }\n    },\n\n    ///METHOD TO ENCRPTY//\n\n    encryptBlock: function (src, publicKey, keySize) {\n      var crypt = new JSEncrypt();\n      crypt.setPublicKey(publicKey);\n      var numberOfBytes = parseInt(parseInt(keySize / 8) - 11);\n\n      var start = 0;\n      var end = numberOfBytes;\n      var encryptedString = \"\";\n\n      if (numberOfBytes > src.length) {\n        end = src.length;\n      }\n\n      do {\n        var bytes = src.substring(start, end);\n        encryptedString += crypt.encrypt(bytes);\n        encryptedString += '\\n';\n\n        start = end;\n        end = end + numberOfBytes;\n        if (end > src.length) {\n          end = src.length;\n        }\n      } while (end < src.length);\n\n      if ((end - start) > 0) {\n        var bytes = src.substring(start, end);\n        encryptedString += crypt.encrypt(bytes);\n        encryptedString += '\\n';\n      }\n      return btoa(encryptedString);\n    },\n  \n  decrypt(privateKey, src) {\n    debugger\n    var plainText = '';\n    var crypt = new JSEncrypt();\n    crypt.setPublicKey(privateKey);\n    var encryptedText = window.atob(src);\n    var encryptArray = encryptedText.split('\\n');\n    for (var i = 0; i < encryptArray.length; i = i + 1){\n    var block = encryptArray[i];\n        if (block != ''){\n            plainText += crypt.decrypt(block);\n        }\n    }\n    return plainText;\n   },\n\n    //Method to sub-encryption common-method//\n\n\n    gen_public_key: function () {\n      var generateKeys = new JSEncrypt({ default_key_size: 2048 });\n      var publicKey = generateKeys.getPublicKey();\n      return publicKey;\n    },\n    gen_private_key: function () {\n      var generateKeys = new JSEncrypt({ default_key_size: 2048 });\n      var privateKey = generateKeys.getPrivateKey();\n      return privateKey;\n    },\n    encrypt: function (data, sPublicKey) {\n      var encryptedData = this.encryptBlock(data, sPublicKey, 2048);\n      return encryptedData;\n    },\n    decryptKey: function (sPrivateKey, Encdata) {\n      //  console.log(sPrivateKey);\n      //  console.log(Encdata);\n      var decryptedData = this.decrypt(sPrivateKey, Encdata);\n      console.log(decryptKey(sPrivateKey, Encdata));\n      return decryptedData;\n    },\n    hash_String: function (str) {\n      var hashed_str = CryptoJS.SHA256(str);\n      for (var i = 1; i <= 999; i++) {\n        hashed_str = CryptoJS.SHA256(hashed_str);\n      }\n      return hashed_str.toString();\n    },\n\n\n    getInitialKey() {\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/GetInitialKey\")\n        .then(response => {\n          if (response.status == 200 && response.data.stat == 'Ok') {\n            // console.log(response.data.publicKey);\n            this.sPubKey1 = response.data.publicKey\n            this.encryptPublicKey = window.atob(this.sPubKey1)\n            //console.log(this.encryptPublicKey,);\n            localStorage.setItem('encrptKey', (this.encryptPublicKey))\n            //console.log(this.encryptPublicKey);\n            this.jSessionId = response.data.tomcatCount\n            localStorage.setItem('tomcatCount', (this.jSessionId))\n            //console.log(this.jSessionId);\n          }\n        })\n        .catch(e => {\n          // console.log(e);\n        })\n\n    },\n\n\n\n    preAuthenticateKey() {\n      this.viewResponse = true\n      this.viewPasswordResponse = true\n      this.viewsecurityResponse = true\n      var sPubKey2 = this.gen_public_key();\n      //encrypt the input\n      this.Encdata3 = this.encrypt(sPubKey2, this.encryptPublicKey);\n      console.log(this.Encdata3);\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/GetPreAuthenticationKey?jsessionid=.\" + this.tokenId + \"&jData=\" + this.Encdata3 + \"&jKey=\" + hashData)\n        .then(response => {\n          this.receiveDate = (new Date()).getTime();\n          this.preAuthenticateTimems = this.receiveDate - this.sendDate;\n          if (response.status == 200 && response.data.stat == 'Ok') {\n            this.sPubKey5 = response.data.publicKey3\n            console.log(this.sPubKey5);\n            var sPrivateKey = this.gen_private_key()\n            //console.log(sPrivateKey);\n            this.holdingbtn = this.gettradebtn = this.orderbtn = this.positionbtn = this.scripbtn = this.orderbtn = this.limitbtn = this.instrumentbtn = this.sublimitbtn =\n              this.alertHistorybtn = this.multiScripbtn = this.indexDetailbtn = this.marginDetailbtn = this.topnbtn = this.indexDetailbtn = this.modifyOrderbtn = this.placeOrderbtn =\n              this.marketStatusbtn = this.searchScripbtn = this.loadOptionbtn = this.orderHistorybtn = this.accountbtn = this.watchListbtn = this.optionChainbtn = this.addScripbtn = this.deleteScripbtn = this.bracketOrderbtn =\n              this.coverOrderBtn = this.basketOrderbtn = this.loadOptionbtn = this.orderHistorybtn = this.loadExpirybtn = this.sortMwbtn = this.categorybtn = this.multipleScripbtn = this.quotesbtn = false;\n            // this.sampleKey = this.decryptKey(sPrivateKey, this.sPubKey5)\n            // console.log(this.sampleKey);\n            // this.sPubKey5 =  this.decryptKey(sPrivateKey, this.sPubKey5);\n            // console.log(this.sPubKey5);\n            this.validatePassword()\n          }\n\n        })\n        .catch(e => {\n          // console.log(e);\n        })\n    },\n    validatePassword() {\n      this.viewPasswordResponse = false\n      this.viewResponse = false\n      this.viewsecurityResponse = false\n      var jsonSendObj = {\n        \"uid\": this.UID,\n        \"pwd\": this.hash_String(this.uPASS),\n        // \"pwd\": hash,\n        \"ftl\": \"N\",\n        \"apk\": \"1.6.1.12\",\n        \"Imei\": \"0000\",\n        \"Source\": \"WEB\"\n      };\n      //console.log(jsonSendObj);\n      this.Encdata4 = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      console.log(this.Encdata4);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      this.$store.commit('SET_LOADER', true, { root: true })\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/ValidPwd?jsessionid=.\" + this.tokenId + \"&jData=\" + this.Encdata4 + \"&jKey=\" + hashData)\n        .then(response => {\n          this.receiveDate = (new Date()).getTime();\n          this.passwordTimeMs = this.receiveDate - this.sendDate;\n\n          if (response.status == 200 && response.data.stat === 'Not_Ok') {\n            this.holdingbtn = this.gettradebtn = this.orderbtn = this.positionbtn = this.scripbtn = this.orderbtn = this.limitbtn = this.instrumentbtn = this.sublimitbtn =\n              this.alertHistorybtn = this.multiScripbtn = this.indexDetailbtn = this.marginDetailbtn = this.topnbtn = this.indexDetailbtn = this.modifyOrderbtn = this.placeOrderbtn =\n              this.marketStatusbtn = this.searchScripbtn = this.loadOptionbtn = this.optionChainbtn = this.orderHistorybtn = this.watchListbtn = this.addScripbtn = this.deleteScripbtn = this.bracketOrderbtn =\n              this.coverOrderBtn = this.basketOrderbtn = this.loadOptionbtn = this.orderHistorybtn = this.accountbtn = this.loadExpirybtn = this.sortMwbtn = this.categorybtn = this.multipleScripbtn = this.quotesbtn = true;\n            this.$store.commit('SET_SNAKBAR', { msg: response.data.Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n            if (response.data['Emsg'] === 'User Blocked Contact System Administrator') {\n              this.unBlockUser()\n            }\n          }\n          else if (response.data['2faResetFlag'] === 'Yes' && response.data['scount'] > 2) {\n            this.save2FAAnswers(data)\n          }\n          else {\n            var questionsCount = JSON.parse(response.data.scount);\n            var sIndex = JSON.parse(response.data.sIndex);\n            this.passwordResponse = response.data\n            //console.log(sIndex);\n            this.validate2fa(questionsCount, response.data.sIndex);\n          }\n          this.$store.commit('SET_LOADER', false, { root: true })\n        })\n        .catch(e => {\n          // console.log(e);\n        })\n    },\n    save2FAAnswers(pData) {\n      var qIndex = JSON.parse(pData)['sIndex'];\n      var questions = qIndex.split('|');\n      var qa = questions[0] + setAns;\n      for (var count = 1; count < 5; count++) {\n        qa = qa + '|' + questions[count] + setAns;\n      }\n      var jsonSendObj = {\n        \"uid\": this.UID,\n        \"qa\": qa\n      }\n      //Encrypt the json object with Public key3              \n      var uid = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //console.log(uid);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/SaveAns?jsessionid=.\" + this.tokenId + \"&jData=\" + uid + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200) {\n            var save2FAAns = response.data;\n            //console.log(save2FAAns);\n          }\n          else {\n            // this.getHoldings();\n          }\n        })\n        .catch(e => {\n          //console.log(e);\n        })\n\n    },\n    validate2fa(questionsCount, sIndex) {\n      while (sIndex.indexOf('|') > -1) {\n        sIndex = sIndex.replace(\"|\", \"-\");\n      }\n      //json object as input for \n\n      var jsonSendObj = {\n        \"uid\": this.UID,\n        \"Count\": questionsCount,\n        \"as\": this.answers,\n        \"is\": sIndex\n      };\n\n      this.Encdata5 = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      console.log(this.Encdata5);\n      var hashData7 = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/ValidAns?jsessionid=.\" + this.tokenId + \"&jData=\" + this.Encdata5 + \"&jKey=\" + \"bd31b58afe0d522bb2d72de4dd6d76b929f51017b00643b526d75838a2f45ee2\")\n        .then(response => {\n          this.receiveDate = (new Date()).getTime();\n          this.validansTimeMs = this.receiveDate - this.sendDate;\n          if (response.status == 200) {\n            var encResp = response.data.jEncResp;\n            console.log(encResp);\n            var sPrivateKey = this.gen_private_key()\n            var decResp = this.decryptKey(sPrivateKey, this.sPubKey5);\n            //console.log(sPrivateKey)\n            // console.log(decResp);\n            // var sPubKey4 = ''\n            // sPubKey4 = JSON.parse(decResp).sUserToken;\n            // console.log(\"Two factor atuthentication (Pub Key 4) =\" + decResp);\n            // localStorage.setItem(\"pubKey4\", sPubKey4);\n            // userSessionID = (JSON.parse(decResp).UserSessionID);\n            // console.log(userSessionID);\n            // localStorage.setItem(\"userSessionID\", userSessionID);\n            if (JSON.parse(decResp).sPasswordReset === 'Y') {\n              this.changePasswordWithPubKey4();\n            }\n          }\n          else { }\n\n        })\n        .catch(e => {\n          //console.log(e);\n        })\n    },\n\n    getHoldings() {\n      var jsonSendObj = {\n        \"uid\": this.UID,\n        \"acctid\": this.UID,\n        \"brkname\": \"ALICEBLUE\",\n        \"s_prdt_ali\": \"CNC:CNC||CO:CO||MIS:MIS||NRML:NRML\",\n        \"symbol\": \"\",\n        \"exch\": \"\",\n        \"Pcode\": \"CNC\"\n      }\n      this.Encdata6 = this.encrypt(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      console.log(this.encryptPublicKey);\n      console.log(this.Encdata6);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/Holding?jsessionid=.\" + \"tomcat35\" + \"&jData=\" + \"ZEw2bk1INVlrUVpwT2x1VWNKbGZRWk4walJzeDM1Z1BxTmpudmRxY2lEenJJYnZBN09oQTVDOFBoOGMyajFhaHdqQWNURUF4dXFVR29tSDdxdmJnVHF6NUx2bG5xNWFXYzlJaFhuQ3E3T1o1b004SjdFWE1ZeFFLaDd4d05sczZ2VTMzdktkMFhzMmJxUkpQamVLMjFEa0NYYnZhL3lBVUx2bmJYWkVLQVlIcUNLMVJndVJBV0NTMUpCYm5xT1pjTVYyc1E0VWVJNG1LclRIWWRZMG9MMC80dk0zQlN2L0g2VEEweFRjZ3o1K20yb0o4cEphb2U3RE9uS2tqdE9kcVVBTDZlNm9rbDdkUURCT3NsNnhrSUJtV3ZYL3V2eUhzQ0V2L0FabmkvNUwveVJPbzJXOS9Jay9GRVpMM3RadGFYcmNuTnhWdzMrTEhyNkM2YjVWYzFBPT0K\" + \"&jKey=\" + \"54593d682541cee96655da65efcac07ebb135e13eafc13cb0eb85bbf627d0097\")\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var holdingList = response.data.Emsg\n            //console.log(holdingList);\n            this.holdingResponse = false\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data.Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n            this.holdingResponse = true\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.holdingsTimeMs = this.receiveDate - this.sendDate;\n          //console.log(this.holdingsTimeMs);\n        })\n        .catch(e => {\n          //console.log(e);\n        })\n    },\n\n    positionBook() {\n      var jsonSendObj = {\n        \"uid\": this.UID,\n        \"actid\": this.UID,\n        \"type\": \"NET\",\n        \"s_prdt_ali\": \"CNC:CNC||CO:CO||MIS:MIS||NRML:NRML\"\n      }\n      var encrptToken = localStorage.getItem('encrptKey')\n      var dataObj = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      console.log(encrptToken);\n      console.log(dataObj);\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/PositionBook?jsessionid=.\" + this.tokenId + \"&jData=\" + dataObj + \"&jKey=\" + hashData,)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var positionList = response.data.result\n            this.positionResponse = false\n            //console.log(positionList);\n          }\n          else if (response.data[0].stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: \"Session Expired\", show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n            this.positionResponse = true\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.responseTimeMs = this.receiveDate - this.sendDate;\n\n          //console.log(this.responseTimeMs);\n        })\n        .catch(e => {\n          // console.log(e);\n        })\n    },\n\n\n    getTradeHistory: function () {\n      var jsonSendObj = {\n        \"uid\": this.UID,\n        // \"accountId\":UID,\n        // \"fromDate\":\"05/04/2019\",\n        // \"toDate\":\"06/04/2019\",\n        // \"exch\":\"NSE\"\n        \"s_prdt_ali\": \"CNC:CNC||CO:CO||MIS:MIS||NRML:NRML\"\n      }\n      //Encrypt the json object with Public key3              \n      var dataObj = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/TradeBook?jsessionid=.\" + this.tokenId + \"&jData=\" + dataObj + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var getTradeBook = response.data.result\n            this.tradebookResponse = true\n            //console.log(getTradeBook);\n          }\n          else if (response.data[0].stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data[0].Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n            this.tradebookResponse = false\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.tradebookTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          // console.log(e);\n        })\n\n    },\n    getAlertHistory: function () {\n      var jsonSendObj = {\n        \"uid\": this.UID,\n        \"s_prdt_ali\": \"BO:BO||CNC:CNC||CO:CO||MIS:MIS||NRML:NRML\",\n      };\n      //Encrypt the json object with Public key3              \n      var uid = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/AlertHistory?jsessionid=.\" + this.tokenId + \"&jData=\" + uid + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var getTradeBook = response.data.result\n            //console.log(getTradeBook);\n          }\n          else if (response.data[0].stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data[0].Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.alertHistoryTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          // console.log(e);\n        })\n\n    },\n    fetchOrderBook: function () {\n      var jsonSendObj = {\n        \"s_prdt_ali\": \"MIS:MIS||CNC:CNC||CO:CO||NRML:NRML||BO:BO\",\n        \"uid\": this.UID\n      };\n      //Encrypt the json object with Public key3              \n      var dataObj = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/OrderBook?jsessionid=.\" + this.tokenId + \"&jData=\" + dataObj + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var getOrderBook = response.data.result\n            this.orderbookResponse = false\n            // console.log(getOrderBook);\n          }\n          else if (response.data[0].stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data[0].Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true });\n            this.orderbookResponse = true\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.orderbookTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          // console.log(e);\n        })\n\n    },\n    loadScrips() {\n      var jsonSendObj = {\n        \"Exchange\": \"NFO\",\n        \"Instname\": \"FUTSTK\"\n      }\n      //Encrypt the json object with Public key3              \n      // var uid = encryptBlock(JSON.stringify(jsonSendObj),sPubKey4,2048);\n      var dataObj = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/LoadScrips?jsessionid=.\" + this.tokenId + \"&jData=\" + dataObj + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var loadScrips = response.data.result\n            this.loadscripResponse = false\n            //   console.log(loadScrips);\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data.Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n            this.loadscripResponse = false\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.loadScripTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          // console.log(e);\n        })\n    },\n    getLimits() {\n      var jsonSendObj = {\n        \"uid\": this.UID,\n        \"actid\": this.UID,\n        \"segment\": \"ALL\",\n        \"Exchange\": \"\"\n      }\n      //Encrypt the json object with Public key3              \n      var dataObj = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/Limits?jsessionid=.\" + this.tokenId + \"&jData=\" + dataObj + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var loadScrips = response.data.result\n            this.getlimitResponse = false\n            //  console.log(loadScrips);\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data.Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n            this.getlimitResponse = true\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.getLimitTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          //console.log(e);\n        })\n    },\n\n    loadInstrument() {\n      var jsonSendObj = {\n        \"Exchange\": \"MCX\"\n      };\n\n      //Encrypt the json object with Public key3              \n      var dataObj = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/Limits?jsessionid=.\" + this.tokenId + \"&jData=\" + dataObj + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var loadInstrument = response.data.result\n            this.loadinstrumentResponse = false\n            // console.log(loadInstrument);\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data.Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n            this.loadinstrumentResponse = true\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.getLoadInstrumentTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          //  console.log(e);\n        })\n    },\n\n    getRMSSubLimits() {\n      var jsonSendObj = {\n        \"uid\": this.UID,\n        \"acId\": this.UID,\n        \"s_prdt_ali\": \"CNC:CNC||CO:CO||MIS:MIS||NRML:NRML\"\n      }\n      //Encrypt the json object with Public key3              \n      var dataObj = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/RMS/Sublimits?jsessionid=.\" + this.tokenId + \"&jData=\" + dataObj + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var rmssubmlimit = response.data.result\n            this.loadsublimitsResponse = false\n            //console.log(rmssubmlimit);\n          }\n          else if (response.data[0].stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data[0].Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n            this.loadsublimitsResponse = true\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.getsubLimitTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          // console.log(e);\n        })\n    },\n\n    getIndexDetails: function () {\n      var jsonSendObj = {\n        \"Exchange\": \"NSE\"\n      };\n      //Encrypt the json object with Public key4             \n      var dataObj = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/IndexDetails?jsessionid=.\" + this.tokenId + \"&jData=\" + dataObj + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var indexDetails = response.data.result\n            // console.log(indexDetails);\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data.Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.getindexdetailTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          // console.log(e);\n        })\n    },\n    getMultiScripsData: function () {\n      var jsonSendObj = {\n        \"scripList\": \"nse_fo|35110,nse_fo|35112,nse_fo|35115,nse_fo|35122,nse_fo|35124,nse_fo|35126,nse_fo|40062\",\n        \"uid\": this.UID\n      }\n      //Encrypt the json object with Public key3              \n      var dataObj = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/broker/mw/scrips?jsessionid=.\" + this.tokenId + \"&jData=\" + dataObj + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var multiscripData = response.data.result\n            this.multiScripResponse = false;\n            // console.log(multiscripData);\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data.Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n            this.multiScripResponse = true\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.multiscripDataTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          //console.log(e);\n        })\n    },\n    getIndexData: function () {\n      var jsonSendObj = {\n        \"Symbol\": \"Nifty 50\",\n        \"exchange\": \"NSE\",\n        \"uid\": this.UID\n      }\n      //Encrypt the json object with Public key3              \n      var uid = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/GetIndicesChart?jsessionid=.\" + this.tokenId + \"&jData=\" + uid + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var indecChratData = response.data.result\n            this.indexdetailResponse = false\n            //console.log(indecChratData);\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data.Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n            this.indexdetailResponse = true\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.indexDataTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          // console.log(e);\n        })\n\n    },\n    getGainerLosers: function () {\n      var jsonSendObj = {\n        \"Category\": \"TRADE_VOLUME\",\n        \"Basket\": \"MCX_FO_OPEN_MARKET\",\n        \"Toptype\": \"\"\n      }\n      //Encrypt the json object with Public key3              \n      var uid = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/Topn?jsessionid=.\" + this.tokenId + \"&jData=\" + uid + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var topntData = response.data.result\n            this.topnviewResponse = false\n            //console.log(topntData);\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data.Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n            this.topnviewResponse = true\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.TopnTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          // console.log(e);\n        })\n    },\n    getMargin: function () {\n      var jsonSendObj =\n      {\n        \"Ttranstype\": \"B\",\n        \"uid\": this.UID,\n        \"branchid\": \"HO\",\n        \"TokenNo\": \"212\",\n        \"Price\": \"36000\",\n        \"exch\": \"NSE\",\n        \"segment\": \"nse_cm\",\n        \"qty\": \"1\",\n        \"actid\": this.UID,\n        \"Pcode\": \"MIS\",\n        \"brokname\": \"ALICEBLUE\",\n        \"prctyp\": \"L\",\n        \"SqrOffAbsOrticks\": \"\",\n        \"SLAbsOrticks\": \"\"\n      };\n      //console.log(jsonSendObj);\n      //Encrypt the json object with Public key4             \n      var dataObj = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/CheckMargin?jsessionid=.\" + this.tokenId + \"&jData=\" + dataObj + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var getMargin = response.data.result\n            this.margindetailResponse = false\n            //console.log(getMargin);\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data.Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n            this.margindetailResponse = true\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.marginTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          // console.log(e);\n        })\n    },\n    accountInfo: function () {\n      var jsonSendObj = {\n        \"acctId\": this.UID\n      }\n      //Encrypt the json object with Public key3              \n      var dataObj = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/user/account/details?jsessionid=.\" + this.tokenId + \"&jData=\" + dataObj + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var accountInfo = response.data.result\n            this.accountResponse = false\n            // console.log(accountInfo);\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data.Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n            this.accountResponse = true\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.accountinfoTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          //  console.log(e);\n        })\n    },\n    placeOrder: function () {\n      var jsonSendObj = {\n        \"s_prdt_ali\": \"BO:BO||CNC:CNC||CO:CO||MIS:MIS||NRML:NRML\",\n        \"uid\": this.UID,\n        \"actid\": this.UID,\n        \"Tsym\": \"INFY-EQ\",\n        \"exch\": \"NSE\",\n        \"Ttranstype\": \"S\",\n        \"Ret\": \"DAY\",\n        \"prctyp\": \"L\",\n        \"qty\": \"50\",\n        \"discqty\": \"0\",\n        \"MktPro\": \"5\",\n        \"Price\": \"8\",\n        \"TrigPrice\": \"0\",\n        \"Pcode\": \"MIS\",\n        \"DateDays\": \"NA\",\n        \"AMO\": \"NO\",\n        \"MinQty\": \"0\",\n        \"PosSquareFlg\": \"\",\n        \"BrokerClient\": \"13179\",\n        \"naicCode\": \"10\",\n        \"orderSource\": \"MOB\",\n        \"userTag\": \"MOB\",\n        // \"Exch_Algo_Id\":\"\",\n        // \"Exch_Algo_Category\":\"\",\n        // \"remarks\":\"\",\n        \"criteriaAttribute\": \"place\"\n      };\n      //Encrypt the json object with Public key3              \n      var dataObj = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/PlaceOrder?jsessionid=.\" + this.tokenId + \"&jData=\" + dataObj + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var placeOrder = response.data.result\n            this.placeOrderResponse = false\n            //console.log(placeOrder);\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data.Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n            this.placeOrderResponse = true\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.placeorderTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          // console.log(e);\n        })\n\n    },\n    modifyOrder: function () {\n      var jsonSendObj = {\n        \"s_prdt_ali\": \"NRML:NRML||MIS:MIS||CNC:CNC||CO:CO\",\n        \"uid\": this.UID,\n        \"Actid\": this.UID,\n        \"Exchangeseg\": \"mcx_fo\",\n        \"Exch\": \"MCX\",\n        \"Tsym\": \"SILVERMIC22NOVFUT\",\n        \"Nstordno\": \"221003000199244\",\n        \"Transtype\": \"B\",\n        \"Prctype\": \"L\",\n        \"Price\": \"56000\",\n        \"Qty\": \"1\",\n        \"Dscqty\": \"0\",\n        \"Trgprc\": \"\",\n        \"Validity\": \"DAY\",\n        \"Symbol\": \"\",\n        \"Filledqty\": \"0\",\n        \"Pcode\": \"MIS\",\n        \"Mktpro\": \"NA\",\n        \"DateDays\": \"NA\",\n        \"criteriaAttribute\": \"\"\n\n      };\n      //Encrypt the json object with Public key3              \n      var dataObj = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/ModifyOrder?jsessionid=.\" + this.tokenId + \"&jData=\" + dataObj + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var modifyOrderData = response.data.result\n            //console.log(modifyOrderData);\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data.Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.modifyorderTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          // console.log(e);\n        })\n    },\n\n    marketStatus: function () {\n      var jsonSendObj = {\n        \"Exchange\": \"MCX\"\n      };\n      \n      //Encrypt the json object with Public key3              \n      var dataObj = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/MarketStatus?jsessionid=.\" + this.tokenId + \"&jData=\" + dataObj + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var marketInfo = response.data.result\n            //console.log(marketInfo);\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data.Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.marketStatusTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          // console.log(e);\n        })\n    },\n\n    loadOption: function () {\n      var jsonSendObj = {\n        \"Exchange\": \"MCX\",\n        \"Instname\": \"FUTCOM\",\n        \"Symbol\": \"CRUDEOILM\",\n        \"Expirydate\": \"1232323199\"\n      };\n\n      //Encrypt the json object with Public key3              \n      var dataObj = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/LoadOption?jsessionid=.\" + this.tokenId + \"&jData=\" + dataObj + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var loadOptions = response.data.result\n            this.loadOptionResponse = false\n            // console.log(loadOptions);\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            this.loadOptionResponse = true\n            this.$store.commit('SET_SNAKBAR', { msg: response.data.Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.loadOptionTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          //  console.log(e);\n        })\n    },\n    orderHistory: function () {\n      var jsonSendObj = {\n        \"uid\": this.UID,\n        \"s_prdt_ali\": \"BO:BO||CNC:CNC||CO:CO||MIS:MIS||NRML:NRML\",\n        \"NOrdNo\": \"190319000000027\"\n      };\n      //Encrypt the json object with Public key3              \n      var dataObj = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/OrderHistory?jsessionid=.\" + this.tokenId + \"&jData=\" + dataObj + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var orderHistory = response.data.result\n            this.orderHistoryResponse = false\n            // console.log(orderHistory);\n          }\n          else if (response.data[0].stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data[0].Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n            this.orderHistoryResponse = true\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.orderHistoryTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          //  console.log(e);\n        })\n\n    },\n    getChartData: function () {\n      var jsonSendObj = {\n        \"exch\": \"CDS\",\n        \"symbol\": \"3692\",\n        \"interval\": \"60\",\n        \"gType\": \"O\"\n      }\n      //Encrypt the json object with Public key3              \n      var uid = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/GetChartData?jsessionid=.\" + this.tokenId + \"&jData=\" + uid + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var chartData = response.data.result\n            // console.log(chartData);\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data.Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.chartDataTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          // console.log(e);\n        })\n\n    },\n    scripSearch: function () {\n      // var groupCash = [\"BE\",\"BL\",\"BZ\",\"D1\",\"DR\",\"E1\",\"E2\",\"EQ\",\"GB\",\"GS\",\"IT\",\"IV\",\"M1\",\"MF\",\"N1\",\"N2\",\"N3\",\"N4\",\"N5\",\"N6\",\"N7\",\"N8\",\"N9\",\"NA\",\"NB\",\"NC\",\"ND\",\"NE\",\"NF\",\"NG\",\"NH\",\"NI\",\"NJ\",\"NK\",\"NL\",\"NM\",\"NN\",\"NO\",\"NP\",\"NQ\",\"NR\",\"NS\",\"NT\",\"NU\",\"NV\",\"NW\",\"NX\",\"NY\",\"NZ\",\"O1\",\"O2\",\"O3\",\"O4\",\"P1\",\"P2\",\"SM\",\"ST\",\"UZ\",\"W1\",\"XX\",\"Y1\",\"Y2\",\"Y3\",\"Y5\",\"Y6\",\"Y7\",\"Y8\",\"Y9\",\"YA\",\"YB\",\"YC\",\"YD\",\"YG\",\"YH\",\"YI\",\"YJ\",\"YK\",\"YL\",\"YM\",\"YN\",\"YO\",\"YP\",\"YQ\",\"YR\",\"YS\",\"YT\",\"YU\"];\n      var groupCash = [\"XX\"];\n      for (var count = 0; count < groupCash.length; count++) {\n        var jsonSendObj = {\n          \"Exchange\": \"MCX\",\n          \"SearchFor\": \"CRUDE\",\n          \"Group\": groupCash[count],\n          \"uid\": this.UID\n        };\n\n        //Encrypt the json object with Public key3              \n        var uid = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n        //Hash the key used for encryption\n        var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n        this.sendDate = (new Date()).getTime();\n        axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/Scripsearch?jsessionid=.\" + this.tokenId + \"&jData=\" + uid + \"&jKey=\" + hashData)\n          .then(response => {\n            if (response.status == 200 && response.data.stat === 'Ok') {\n              var searchScrips = response.data.result\n              this.searchscripResponse = false\n              // console.log(searchScrips);\n            }\n            else if (response.data[0].stat === 'Not_Ok') {\n              this.$store.commit('SET_SNAKBAR', { msg: response.data[0].Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n              this.searchscripResponse = true\n            }\n            this.receiveDate = (new Date()).getTime();\n            this.searchScripsTimeMs = this.receiveDate - this.sendDate;\n          })\n          .catch(e => {\n            // console.log(e);\n          })\n      }\n    },\n    getMarketWatchList() {\n      //json object as input for \n      var jsonSendObj = {\n        \"uid\": this.UID\n      };\n      //Encrypt the json object with Public key3              \n      var uid = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/MWList?jsessionid=.\" + this.tokenId + \"&jData=\" + uid + \"&jKey=\" + hashData)\n        .then(response => {\n\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var defaultMktWatch = response.data.logindefaultmw;\n            mwValues = JSON.parse(data).values;\n            getMarketWatchScrips(defaultMktWatch);\n            this.watchListResponse = false\n            // console.log(searchScrips);\n          }\n          else if (response.data.stat === 'Not_Ok' || response.data.stat === null || response.data.stat === undefined) {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data.Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n            this.watchListResponse = true\n            this.getInitialKey()\n            //  console.log(errorMessage);\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.watchListTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          // console.log(e);\n        })\n    },\n\n    getMarketWatchScrips(mktWatchListName) {\n      //json object as input for \n\n      var jsonSendObj = {\n        \"uid\": this.UID,\n        \"MWname\": mktWatchListName,\n        \"mrvData\": \"Y\"\n      };\n      //Encrypt the json object with Public key3              \n      var uid = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/MarketWatch?jsessionid=.\" + this.tokenId + \"&jData=\" + uid + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var chartData = response.data.result\n            //console.log(chartData);\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data.Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.marketWatchscripTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          // console.log(e);\n        })\n    },\n\n    addScripToMW: function () {\n      var jsonSendObj = {\n        \"uid\": this.UID,\n        \"Symbol\": \"57140\",\n        \"Exchange\": \"NFO\",\n        \"MWname\": \"mwGrp2\"\n      };\n      //Encrypt the json object with Public key3              \n      var dataObj = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/AddScripsToMW?jsessionid=.\" + this.tokenId + \"&jData=\" + dataObj + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var addScrips = response.data.result\n            this.addscripResponse = false\n            //  console.log(addScrips);\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data.Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n            this.addscripResponse = true\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.addScripsTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          // console.log(e);\n        })\n\n    },\n    deleteScrips: function () {\n      var jsonSendObj = {\n        \"uid\": this.UID,\n        \"Exchange\": \"NSE\",\n        \"MWName\": \"mwGrp2\",\n        \"Symbol\": \"3045\"\n      };\n      //Encrypt the json object with Public key3              \n      var dataObj = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/DeleteMWScrips?jsessionid=.\" + this.tokenId + \"&jData=\" + dataObj + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var deleteScrips = response.data.result\n            this.deletescripResponse = false\n            //console.log(deleteScrips);\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data.Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n            this.deletescripResponse = true\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.deleteScripsTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          //  console.log(e);\n        })\n\n    },\n\n    basketOrder: function () {\n      var jsonSendObj = {\n        \"uid\": this.UID,\n        \"acid\": this.UID,\n        \"mOrderString\": \"NSE|INFY-EQ|B|MIS|L|DAY|730.00|0.0|10|0|NA|NA|NA\",\n        \"naicCode\": \"\",\n        \"orderSource\": \"MOB\",\n        \"userTag\": \"MOB\"\n      };\n      //Encrypt the json object with Public key3              \n      var dataObj = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/BasketOrder?jsessionid=.\" + this.tokenId + \"&jData=\" + dataObj + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var basketOrder = response.data.result\n            this.basketOrderResponse = false\n            //console.log(basketOrder);\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data.Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n            this.basketOrderResponse = true\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.basketOrderTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          // console.log(e);\n        })\n\n    },\n    bracketOrder: function () {\n      var jsonSendObj = {\n        \"exch\": \"MCX\",\n        \"TokenNo\": \"215500\",\n        \"Ttranstype\": \"B\",\n        \"qty\": \"1\",\n        \"actid\": this.UID,\n        \"uid\": this.UID,\n        \"s_prdt_ali\": \"BO:BO||CNC:CNC||CO:CO||MIS:MIS||NRML:NRML\",\n        \"Ret\": \"DAY\",\n        \"discqty\": \"1\",\n        \"Price\": \"46870.00\",\n        \"ltpOratp\": \"LTP\",\n        \"SqrOffAbsOrticks\": \"Absolute\",\n        \"SqrOffvalue\": \"1\",\n        \"SLAbsOrticks\": \"Absolute\",\n        \"SLvalue\": \"1\",\n        \"trailingSL\": \"Y\",\n        \"tSLticks\": \"20\",\n        \"naicCode\": \"\",\n        \"orderSource\": \"WEB\",\n        \"userTag\": \"WEB\",\n        \"Exch_Algo_Id\": \"NA\",\n        \"Exch_Algo_Category\": \"NA\",\n        //\"criteriaAttribute\":\"pla  ce\",\n        \"prctyp\": \"SL\",\n        \"TrigPrice\": \"46855.00\"\n      };\n      //Encrypt the json object with Public key3              \n      var dataObj = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/user/bo/placeorder?jsessionid=.\" + this.tokenId + \"&jData=\" + dataObj + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var bracketOrder = response.data.result\n            this.bracketResponse = false\n            //console.log(bracketOrder);\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data.emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n            this.bracketResponse = true\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.bracketOrderTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          // console.log(e);\n        })\n    },\n    coverOrder: function () {\n      var jsonSendObj = {\n        \"s_prdt_ali\": \"BO:BO||CNC:CNC||CO:CO||MIS:MIS||NRML:NRML\",\n        \"uid\": this.UID,\n        \"actid\": this.UID,\n        \"Tsym\": \"SILVER19JULFUT\",\n        \"exch\": \"MCX\",\n        \"Ttranstype\": \"B\",\n        \"Ret\": \"DAY\",\n        \"prctyp\": \"L\",\n        \"qty\": \"5\",\n        \"discqty\": \"0\",\n        \"MktPro\": \"NA\",\n        \"Price\": \"36250\",\n        \"TrigPrice\": \"36190\",\n        \"Pcode\": \"CO\",\n        \"DateDays\": \"NA\",\n        \"AMO\": \"NO\",\n        \"MinQty\": \"0\",\n        \"PosSquareFlg\": \"\",\n        \"BrokerClient\": \"72026\",\n        \"naicCode\": \"\",\n        \"orderSource\": \"MOB\",\n        \"userTag\": \"MOB\",\n        \"criteriaAttribute\": \"place\"\n      };\n      //Encrypt the json object with Public key3              \n      var dataObj = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/PlaceOrder?jsessionid=.\" + this.tokenId + \"&jData=\" + dataObj + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var coverOrder = response.data.result\n            this.coverorderResponse = false\n            // console.log(coverOrder);\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data.Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n            this.coverorderResponse = true\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.coverOrderTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          // console.log(e);\n        })\n    },\n\n    loadExpiryDates: function () {\n      var jsonSendObj = {\n        \"Exchange\": \"NFO\",\n        \"Symbol\": \"NIFTY\",\n        \"Instname\": \"OPTIDX\"\n      }\n      //Encrypt the json object with Public key3              \n      var dataObj = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/LoadDate?jsessionid=.\" + this.tokenId + \"&jData=\" + dataObj + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var loadExpiry = response.data.result\n            this.loadexpiryResponse = false\n            // console.log(loadExpiry);\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data.Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n            this.loadexpiryResponse = true\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.loadExpiryTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          // console.log(e);\n        })\n    },\n    optionChainLoader: function () {\n      var jsonSendObj = {\n        \"exch\": \"NFO\",\n        \"userid\": this.UID,\n        \"symbol\": \"NIFTY\",\n        \"sIMEI\": \"\",\n        \"IN\": \"OPTIDX\",\n        \"ED\": \"1235831400\"\n      };\n\n      //Encrypt the json object with Public key3              \n      var dataObj = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/OptionChain?jsessionid=.\" + this.tokenId + \"&jData=\" + dataObj + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var loadOptionChain = response.data.result\n            this.optionchainResponse = false\n            // console.log(loadOptionChain);\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data.Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n            this.optionchainResponse = true\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.OptionChainTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          //  console.log(e);\n        })\n    },\n    addMultipleScripToMW: function () {\n      var jsonSendObj = {\n        \"uid\": this.UID,\n        \"mWString\": \"MCX|214671#MCX|214672\",\n        \"MWname\": \"mwGrp2\"\n      };\n      //Encrypt the json object with Public key3              \n      var dataObj = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/AddMultiScripsToMW?jsessionid=.\" + this.tokenId + \"&jData=\" + dataObj + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var multipleScrips = response.data.result\n            this.multiplescripReponse = false\n            // console.log(multipleScrips);\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data.Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n            this.multiplescripReponse = true\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.multipleScripsTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          // console.log(e);\n        })\n    },\n    getCategories: function () {\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/Topkeys?jsessionid=.\" + this.tokenId + \"&jData=&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var getCategories = response.data.result\n            this.categoryResponse = false\n            // console.log(getCategories);\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data.Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n            this.categoryResponse = true\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.categoryTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          // console.log(e);\n        })\n    },\n    showQuote: function () {\n      var jsonSendObj = {\n        \"Exchange\": \"NFO\",\n        \"Symbol\": \"54658\"\n      };\n\n      //Encrypt the json object with Public key3              \n      var dataObj = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/ShowQuote?jsessionid=.\" + this.tokenId + \"&jData=\" + dataObj + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var showQuotes = response.data.result\n            this.qoutesResponse = false\n            // console.log(showQuotes);\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data.Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n            this.qoutesResponse = true\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.quotesTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          //  console.log(e);\n        })\n    },\n\n    sortMarketWatch: function () {\n      var jsonSendObj = {\n        \"uid\": this.UID,\n        \"MWname\": \"BANKNIFTY\",\n        \"list\": \"BANKNIFTY|NSE|1594|NFO|50474|NSE|3456|NSE|547|NSE|11536|NFO|53757\"\n      };\n      //Encrypt the json object with Public key3              \n      var dataObj = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/SortMarketwatchScrips?jsessionid=.\" + this.tokenId + \"&jData=\" + dataObj + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var sortMW = response.data.result\n            this.sortMarketwatcResponse = false\n            // console.log(sortMW);\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data.Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n            this.sortMarketwatcResponse = true\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.sortMarketwatchTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          //console.log(e);\n        })\n    },\n    loadRetentionType: function () {\n      var jsonSendObj = {\n        \"Exchange\": \"MCX\"\n      };\n      //Encrypt the json object with Public key3              \n      var dataObj = this.encryptBlock(JSON.stringify(jsonSendObj), this.encryptPublicKey, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(this.encryptPublicKey);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/LoadRetentionType?jsessionid=.\" + this.tokenId + \"&jData=\" + dataObj + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var sortMW = response.data.result\n            this.loadretentionResponse = false\n            //console.log(sortMW);\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data.Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n            this.loadretentionResponse = true\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.retentionTypeTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          // console.log(e);\n        })\n\n    },\n    deleteMW(mwName) {\n\n      var jsonSendObj = {\n        \"uid\": this.UID,\n        \"MWName\": \"null\"\n      };\n      //Encrypt the json object with Public key3              \n      var dataObj = this.encryptBlock(JSON.stringify(jsonSendObj), sPubKey4, 2048);\n      //Hash the key used for encryption\n      var hashData = CryptoJS.SHA256(sPubKey4);\n      this.sendDate = (new Date()).getTime();\n      axios.post(\"http://f5.aliceblueonline.com/NestHtml5MobileTech/rest/DeleteMW?jsessionid=.\" + this.tokenId + \"&jData=\" + dataObj + \"&jKey=\" + hashData)\n        .then(response => {\n          if (response.status == 200 && response.data.stat === 'Ok') {\n            var sortMW = response.data.result\n            //console.log(sortMW);\n          }\n          else if (response.data.stat === 'Not_Ok') {\n            this.$store.commit('SET_SNAKBAR', { msg: response.data.Emsg, show: true, color: 'red lighten-1', timeout: 3000 }, { root: true })\n          }\n          this.receiveDate = (new Date()).getTime();\n          this.deleteMWTimeMs = this.receiveDate - this.sendDate;\n        })\n        .catch(e => {\n          //  console.log(e);\n        })\n    },\n\n  }\n};\n</script>\n\n<style>\n.position-relative {\n  position: relative;\n}\n\n.position-absolute {\n  position: absolute;\n}\n\n.right-0 {\n  right: 24px;\n  top: 20%;\n}\n\n.v-icon[disabled] {\n  cursor: not-allowed !important;\n}\n</style>"]}]}