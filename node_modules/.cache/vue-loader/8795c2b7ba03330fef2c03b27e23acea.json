{"remainingRequest":"/home/stoneage/VUE.JS Projects/Zebu-Admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/stoneage/VUE.JS Projects/Zebu-Admin/src/views/settings.vue?vue&type=template&id=4a0130bd&","dependencies":[{"path":"/home/stoneage/VUE.JS Projects/Zebu-Admin/src/views/settings.vue","mtime":1669624611025},{"path":"/home/stoneage/VUE.JS Projects/Zebu-Admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stoneage/VUE.JS Projects/Zebu-Admin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/stoneage/VUE.JS Projects/Zebu-Admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stoneage/VUE.JS Projects/Zebu-Admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}