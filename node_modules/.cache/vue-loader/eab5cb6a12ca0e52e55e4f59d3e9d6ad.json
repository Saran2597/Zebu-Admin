{"remainingRequest":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/src/views/contents/EditableViews/addOrEditSectorContent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/src/views/contents/EditableViews/addOrEditSectorContent.vue","mtime":1662961057375},{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICJ2dWV4IjsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6ICgpID0+ICh7CiAgICBzY3JpcE5hbWU6ICIiLAogICAgc3RvY2tOYW1lOiAiIiwKICAgIGV4Y2hhbmdlOiAiTlNFIiwKICAgIHRva2VuOiAiIiwKICAgIGNvbXBhbnlOYW1lOiAiIiwKICAgIHNjcmlwTmFtZVJ1bGVzOiBbKHYpID0+ICEhdiB8fCAiU2NyaXAgTmFtZSBpcyByZXF1aXJlZCJdLAogICAgc3RvY2tOYW1lUnVsZXM6IFsodikgPT4gISF2IHx8ICJTdG9jayBOYW1lIGlzIHJlcXVpcmVkIl0sCiAgICBleGNoYW5nZVJ1bGVzOiBbKHYpID0+ICEhdiB8fCAiRXhjaGFuZ2UgaXMgcmVxdWlyZWQiXSwKICAgIHRva2VuUnVsZXM6IFsodikgPT4gISF2IHx8ICJUb2tlbiBpcyByZXF1aXJlZCJdLAogICAgY29tcGFueVJ1bGVzOiBbKHYpID0+ICEhdiB8fCAiQ29tcGFueSBOYW1lIGlzIHJlcXVpcmVkIl0sCiAgICBmb3JtOiB0cnVlLAogICAgbnNlRGF0YTogW10sCiAgICBic2VEYXRhOiBbXSwKICB9KSwKICBtZXRob2RzOiB7CiAgICByZXNldEZvcm0oKSB7CiAgICAgIHRoaXMuc2NyaXBOYW1lID0gIiI7CiAgICAgIHRoaXMuc3RvY2tOYW1lID0gIiI7CiAgICAgIHRoaXMuZXhjaGFuZ2UgPSAiIjsKICAgICAgdGhpcy50b2tlbiA9ICIiOwogICAgICB0aGlzLmNvbXBhbnlOYW1lID0gIiI7CiAgICB9LAogICAgYXN5bmMgY3JlYXRlTWFwcGVkU2VjdG9yKCkgewogICAgICBsZXQgc2VjdG9ySWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgic2VjdG9ySWQiKTsKICAgICAgbGV0IGpzb25PYmogPSB7CiAgICAgICAgc2VjdG9ySWQ6IHNlY3RvcklkLAogICAgICAgIHNjcmlwTmFtZTogdGhpcy5zY3JpcE5hbWUsCiAgICAgICAgc3RvY2tOYW1lOiB0aGlzLnN0b2NrTmFtZSwKICAgICAgICBleGNoOiB0aGlzLmV4Y2hhbmdlLAogICAgICAgIHRva2VuOiB0aGlzLnRva2VuLAogICAgICAgIGNvbXBhbnlOYW1lOiB0aGlzLmNvbXBhbnlOYW1lLAogICAgICB9OwogICAgICBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaCgic2VjdG9yL2NyZWF0ZVNlY3Rvck1hcHBpbmciLCBqc29uT2JqKTsKICAgICAgdGhpcy5yZXNldEZvcm0oKTsKICAgIH0sCiAgICBzZXRTdG9ja0RldGFpbHMoY3VycmVudERhdGEpIHsKICAgICAgY29uc29sZS5sb2coY3VycmVudERhdGEpOwogICAgICAvLyBpZiAoY3VycmVudERhdGEuZXhjaC50b1VwcGVyQ2FzZSgpID09PSAiTlNFIiB8fCBjdXJyZW50RGF0YS5leGNoID09PSAiIikgewogICAgICAvLyAgIHRoaXMudG9rZW4gPSB0aGlzLm5zZURhdGEudG9rZW47CiAgICAgIC8vICAgdGhpcy5zY3JpcE5hbWUgPSB0aGlzLm5zZURhdGEuc3ltYm9sOwogICAgICAvLyAgIHRoaXMuY29tcGFueU5hbWUgPSB0aGlzLm5zZURhdGEuaW5zdHJ1bWVudF9uYW1lOwogICAgICAvLyB9IGVsc2UgaWYodGhpcy5leGNoYW5nZS50b1VwcGVyQ2FzZSgpID09PSAiQlNFIikgewogICAgICAvLyAgIHRoaXMudG9rZW4gPSB0aGlzLmJzZURhdGEudG9rZW47CiAgICAgIC8vICAgdGhpcy5zY3JpcE5hbWUgPSB0aGlzLmJzZURhdGEuc3ltYm9sOwogICAgICAvLyAgIHRoaXMuY29tcGFueU5hbWUgPSB0aGlzLmJzZURhdGEuaW5zdHJ1bWVudF9uYW1lOwogICAgICAvLyB9CiAgICAgICAgdGhpcy50b2tlbiA9IGN1cnJlbnREYXRhLnRva2VuOwogICAgICAgIHRoaXMuc2NyaXBOYW1lID0gIHRoaXMuc3RvY2tOYW1lID0gY3VycmVudERhdGEuc3ltYm9sOwogICAgICAgIHRoaXMuY29tcGFueU5hbWUgPSBjdXJyZW50RGF0YS5pbnN0cnVtZW50X25hbWU7CiAgICAgICAgdGhpcy5leGNoYW5nZSA9IGN1cnJlbnREYXRhLmV4Y2gKICAgICAgICB0aGlzLm9uQ2xpY2tPdXRzaWRlKCk7CiAgICB9LAogICAgb25DbGlja091dHNpZGUoKSB7CiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgic2NyaXBJbmZvL1NFVF9TRUFSQ0hfU0NSSVBTIiwgW10pOwogICAgfSwKICB9LAogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBHZXR0ZXJzKHsKICAgICAgc2VhcmNoRGF0YTogImdldFNlYXJjaERhdGEiLAogICAgfSksCiAgICAuLi5tYXBHZXR0ZXJzKCJzY3JpcEluZm8iLCB7CiAgICAgIHNlYXJjaERhdGE6ICJzY3JpcFNlYXJjaCIsCiAgICB9KSwKICB9LAogIHdhdGNoOiB7CiAgICAvLyBzdG9ja05hbWU6IGFzeW5jIGZ1bmN0aW9uICh2YWwpIHsKICAgIC8vICAgdGhpcy5zdG9ja05hbWUgPSB2YWwudG9VcHBlckNhc2UoKTsKICAgIC8vICAgbGV0IGpzb25PYmogPSB7IGV4Y2hhbmdlOiBbIk5TRSIsICJCU0UiXSwgc3ltYm9sOiB2YWwgfTsKICAgIC8vICAgYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goImdldFNlYXJjaERhdGEiLCBqc29uT2JqKTsKICAgIC8vICAgdGhpcy5uc2VEYXRhID0gW107CiAgICAvLyAgIHRoaXMuYnNlRGF0YSA9IFtdOwogICAgLy8gICB0aGlzLnNlYXJjaERhdGEuZm9yRWFjaCgoZWwpID0+IHsKICAgIC8vICAgICBpZiAoZWwuc3ltYm9sLnRvVXBwZXJDYXNlKCkuaW5jbHVkZXModGhpcy5zdG9ja05hbWUudG9VcHBlckNhc2UoKSkgJiYgZWwuZXhjaCA9PSAiTlNFIikgewogICAgLy8gICAgICAgdGhpcy5uc2VEYXRhID0gZWw7CiAgICAvLyAgICAgICB0aGlzLnNldFN0b2NrRGVhdGFpbHMoKTsKICAgIC8vICAgICB9IGVsc2UgaWYoZWwuc3ltYm9sLnRvVXBwZXJDYXNlKCkuaW5jbHVkZXModGhpcy5zdG9ja05hbWUudG9VcHBlckNhc2UoKSkgJiYgZWwuZXhjaCA9PSAiQlNFIil7CiAgICAvLyAgICAgICB0aGlzLmJzZURhdGEgPSBlbDsKICAgIC8vICAgICAgIHRoaXMuc2V0U3RvY2tEZWF0YWlscygpOwogICAgLy8gICAgIH0KICAgIC8vICAgfSk7CiAgICAvLyB9LAogICAgIHN0b2NrTmFtZSh2YWwpIHsKICAgICAgaWYgKHZhbCAmJiB2YWw/Lmxlbmd0aCA+IDEpIHsKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgic2NyaXBJbmZvL3NjcmlwU2VhcmNoIiwgdmFsKTsKICAgICAgfQogICAgfSwKICAgIC8vIGV4Y2hhbmdlOiBhc3luYyBmdW5jdGlvbiAodmFsKSB7CiAgICAvLyAgIHRoaXMuZXhjaGFuZ2UgPSB2YWwudG9VcHBlckNhc2UoKTsKICAgIC8vICAgdGhpcy5zZXRTdG9ja0RlYXRhaWxzKCk7CiAgICAvLyB9CiAgfSwKICBtb3VudGVkKCkge30sCn07Cg=="},{"version":3,"sources":["addOrEditSectorContent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"addOrEditSectorContent.vue","sourceRoot":"src/views/contents/EditableViews","sourcesContent":["<template>\n  <div>\n    <v-row class=\"ma-0 pa-4 align-center\">\n      <v-col cols=\"2\" class=\"pa-0\">\n        <h3 width=\"100\" height=\"24\" class=\".text-lg-h6\">\n          Sector Details\n        </h3>\n      </v-col>\n    </v-row>\n\n    <div class=\"mt-1\">\n      <v-form ref=\"form\" v-model=\"form\" lazy-validation>\n        <v-card class=\"mx-4 pa-5 cardBoxShadow rounded-lg\">\n          <v-row class=\"ma-0\">\n            <v-col cols=\"12\" sm=\"12\" md=\"6\" lg=\"3\">\n              <span class=\"fsize14 font-weight-bold primaryColor\">Sector Details</span>\n            </v-col>\n            <v-col cols=\"12\" sm=\"12\" md=\"6\" lg=\"5\">\n              <div class=\"pb-1 secondaryColor fsize14\">Stock Name</div>\n              <!-- <v-text-field autofocus dense height=\"40px\" v-model=\"stockName\" placeholder=\"Enter the Sector Name\" autocomplete=\"off\" outlined :rules=\"stockNameRules\">\n              </v-text-field> -->\n              <div style=\"position:relative\">\n              <v-text-field autofocus height=\"40\" class=\"fsize13\" placeholder=\"Enter the Sector Name\" v-model=\"stockName\" clearable hide-no-data solo tile flat dense\n                  open-on-clear @click:clear=\"onClickOutside();\" outlined @input=\"\n                    stockName ? (stockName = stockName.toString().toUpperCase()) : ''\n                  \" :rules=\"stockNameRules\">\n                </v-text-field>\n                <div v-if=\"searchData.length > 0\" v-click-outside=\"onClickOutside\">\n                <v-sheet transition=\"fade-transition\" tile style=\"top: 45px;\" class=\"searchContent\">\n                  <ul class=\"pl-0 borderbox\">\n                    <li class=\"\n                        searchlist\n                        px-2\n                        py-3\n                        body-2\n                        border-bottom-light\n                        d-flex\n                        align-center\n                        pointer\n                      \" v-for=\"(idx, index) in searchData\" :key=\"index\" @click=\"setStockDetails(idx)\">\n                      <div>\n                        {{\n                            idx.exch == \"NSE\" || idx.exch == \"BSE\"\n                              ? idx.symbol\n                              : idx.formattedInsName\n                        }}\n                      </div>\n                      <v-spacer></v-spacer>\n                      <p class=\"ma-0\">\n                        {{ idx.exch == \"NFO\" ? \"\" : idx.instrument_name }}\n                      </p>\n                      <label for=\"\" class=\"fsize10 rounded min-width-40 pa-0 ml-3\"><span :class=\"\n                        idx.exch == 'NSE'\n                          ? 'searchbuyColor'\n                          : idx.exch == 'BSE'\n                            ? 'searchsellColor'\n                            : idx.exch == 'NFO'\n                              ? 'cancelledColor'\n                              : 'cancelledColor'\n                      \">{{ idx.exch }}</span></label>\n                    </li>\n                  </ul>\n                </v-sheet>\n              </div>\n              </div>\n              <div class=\"pb-1 secondaryColor fsize14\">Scrip Name</div>\n              <v-text-field  dense height=\"40px\" v-model=\"scripName\" placeholder=\"Enter the Sector Name\" autocomplete=\"off\" outlined :rules=\"scripNameRules\">\n              </v-text-field>\n              <div class=\"pb-1 secondaryColor fsize14\">Exchange</div>\n              <v-text-field dense height=\"40px\" v-model=\"exchange\" placeholder=\"Enter the Sector Name\" autocomplete=\"off\" outlined :rules=\"exchangeRules\">\n              </v-text-field>\n              <div class=\"pb-1 secondaryColor fsize14\">Token</div>\n              <v-text-field dense height=\"40px\" v-model=\"token\" placeholder=\"Enter the Sector Name\" autocomplete=\"off\" outlined :rules=\"tokenRules\">\n              </v-text-field>\n              <div class=\"pb-1 secondaryColor fsize14\">Company Name</div>\n              <v-text-field dense height=\"40px\" v-model=\"companyName\" placeholder=\"Enter the Sector Name\" autocomplete=\"off\" outlined :rules=\"companyRules\">\n              </v-text-field>\n            </v-col>\n            <v-col cols=\"12\" sm=\"12\" md=\"6\" lg=\"4\"></v-col>\n          </v-row>\n          <div>\n          </div>\n        </v-card>\n\n        <div class=\"mt-5 pa-4 d-flex justify-end\">\n          <v-btn height=\"40\" width=\"96\" depressed outlined @click=\"$router.back()\" class=\"text-capitalize\" min-width=\"80\">Cancel</v-btn>\n          <v-btn height=\"40\" width=\"96\" color=\"primary\" depressed class=\"ml-4 text-capitalize\" @click=\"createMappedSector\" min-width=\"80\">\n            Save\n          </v-btn>\n        </div>\n      </v-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\nexport default {\n  data: () => ({\n    scripName: \"\",\n    stockName: \"\",\n    exchange: \"NSE\",\n    token: \"\",\n    companyName: \"\",\n    scripNameRules: [(v) => !!v || \"Scrip Name is required\"],\n    stockNameRules: [(v) => !!v || \"Stock Name is required\"],\n    exchangeRules: [(v) => !!v || \"Exchange is required\"],\n    tokenRules: [(v) => !!v || \"Token is required\"],\n    companyRules: [(v) => !!v || \"Company Name is required\"],\n    form: true,\n    nseData: [],\n    bseData: [],\n  }),\n  methods: {\n    resetForm() {\n      this.scripName = \"\";\n      this.stockName = \"\";\n      this.exchange = \"\";\n      this.token = \"\";\n      this.companyName = \"\";\n    },\n    async createMappedSector() {\n      let sectorId = localStorage.getItem(\"sectorId\");\n      let jsonObj = {\n        sectorId: sectorId,\n        scripName: this.scripName,\n        stockName: this.stockName,\n        exch: this.exchange,\n        token: this.token,\n        companyName: this.companyName,\n      };\n      await this.$store.dispatch(\"sector/createSectorMapping\", jsonObj);\n      this.resetForm();\n    },\n    setStockDetails(currentData) {\n      console.log(currentData);\n      // if (currentData.exch.toUpperCase() === \"NSE\" || currentData.exch === \"\") {\n      //   this.token = this.nseData.token;\n      //   this.scripName = this.nseData.symbol;\n      //   this.companyName = this.nseData.instrument_name;\n      // } else if(this.exchange.toUpperCase() === \"BSE\") {\n      //   this.token = this.bseData.token;\n      //   this.scripName = this.bseData.symbol;\n      //   this.companyName = this.bseData.instrument_name;\n      // }\n        this.token = currentData.token;\n        this.scripName =  this.stockName = currentData.symbol;\n        this.companyName = currentData.instrument_name;\n        this.exchange = currentData.exch\n        this.onClickOutside();\n    },\n    onClickOutside() {\n      this.$store.commit(\"scripInfo/SET_SEARCH_SCRIPS\", []);\n    },\n  },\n  computed: {\n    ...mapGetters({\n      searchData: \"getSearchData\",\n    }),\n    ...mapGetters(\"scripInfo\", {\n      searchData: \"scripSearch\",\n    }),\n  },\n  watch: {\n    // stockName: async function (val) {\n    //   this.stockName = val.toUpperCase();\n    //   let jsonObj = { exchange: [\"NSE\", \"BSE\"], symbol: val };\n    //   await this.$store.dispatch(\"getSearchData\", jsonObj);\n    //   this.nseData = [];\n    //   this.bseData = [];\n    //   this.searchData.forEach((el) => {\n    //     if (el.symbol.toUpperCase().includes(this.stockName.toUpperCase()) && el.exch == \"NSE\") {\n    //       this.nseData = el;\n    //       this.setStockDeatails();\n    //     } else if(el.symbol.toUpperCase().includes(this.stockName.toUpperCase()) && el.exch == \"BSE\"){\n    //       this.bseData = el;\n    //       this.setStockDeatails();\n    //     }\n    //   });\n    // },\n     stockName(val) {\n      if (val && val?.length > 1) {\n        this.$store.dispatch(\"scripInfo/scripSearch\", val);\n      }\n    },\n    // exchange: async function (val) {\n    //   this.exchange = val.toUpperCase();\n    //   this.setStockDeatails();\n    // }\n  },\n  mounted() {},\n};\n</script>"]}]}