{"remainingRequest":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/src/views/apiKey.vue?vue&type=template&id=3b940c02&","dependencies":[{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/src/views/apiKey.vue","mtime":1668781304767},{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}