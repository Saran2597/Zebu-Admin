{"remainingRequest":"/home/stoneage/VUE.JS Projects/Zebu-Admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/stoneage/VUE.JS Projects/Zebu-Admin/src/views/adminMessage.vue?vue&type=template&id=0aed1ed2&","dependencies":[{"path":"/home/stoneage/VUE.JS Projects/Zebu-Admin/src/views/adminMessage.vue","mtime":1668528462247},{"path":"/home/stoneage/VUE.JS Projects/Zebu-Admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stoneage/VUE.JS Projects/Zebu-Admin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/stoneage/VUE.JS Projects/Zebu-Admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stoneage/VUE.JS Projects/Zebu-Admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}