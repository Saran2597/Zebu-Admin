{"remainingRequest":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/src/views/userLogs.vue?vue&type=template&id=7573e934&","dependencies":[{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/src/views/userLogs.vue","mtime":1668528462255},{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stoneage/VUE.JS Projects/Admin-panel/zebu-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}