{"remainingRequest":"/home/stoneage/VUE.JS Projects/Zebu-Admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/stoneage/VUE.JS Projects/Zebu-Admin/src/views/dashboard.vue?vue&type=template&id=19c9d02c&","dependencies":[{"path":"/home/stoneage/VUE.JS Projects/Zebu-Admin/src/views/dashboard.vue","mtime":1668528462255},{"path":"/home/stoneage/VUE.JS Projects/Zebu-Admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stoneage/VUE.JS Projects/Zebu-Admin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/stoneage/VUE.JS Projects/Zebu-Admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stoneage/VUE.JS Projects/Zebu-Admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}